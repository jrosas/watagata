-----------------------------------------------------------------------------
Info file generated by Happy Version 1.18.4 from Parser.y
-----------------------------------------------------------------------------

state 121 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> Prog                              (0)
	Prog -> FunDec Instruc                             (1)
	FunDec ->                                          (2)
	FunDec -> FunDec define id '(' VarListFunc ')' of type VarType as Instruc   (3)
	FunDec -> FunDec define id '(' ')' of type VarType as Instruc   (4)
	VarListFunc -> id ':' VarType                      (5)
	VarListFunc -> VarListFunc ',' VarListFunc         (6)
	VarType -> tnum                                    (7)
	VarType -> tvec                                    (8)
	VarType -> tmat                                    (9)
	Instruc -> Matched                                 (10)
	Instruc -> Unmatched                               (11)
	Matched -> if Boolean then Matched else Matched    (12)
	Matched -> Asig                                    (13)
	Matched -> InsBlock                                (14)
	Matched -> While                                   (15)
	Matched -> ForEach                                 (16)
	Matched -> Read                                    (17)
	Matched -> Write                                   (18)
	Matched -> Return                                  (19)
	Unmatched -> if Boolean then Instruc               (20)
	Unmatched -> if Boolean then Matched else Unmatched   (21)
	Asig -> Lval ':=' Exp                              (22)
	Lval -> Mat                                        (23)
	Lval -> Access '[' Exp ']'                         (24)
	Lval -> Access '[' Exp ',' Exp ']'                 (25)
	Lval -> Access '[' Ind ':' Ind ']'                 (26)
	Lval -> Access '[' Ind ':' Ind ',' Ind ':' Ind ']'   (27)
	Access -> Mat                                      (28)
	Access -> id                                       (29)
	Ind ->                                             (30)
	Ind -> Exp                                         (31)
	Exp -> num                                         (32)
	Exp -> string                                      (33)
	Exp -> '(' Exp ')'                                 (34)
	Exp -> Exp '+' Exp                                 (35)
	Exp -> Exp '-' Exp                                 (36)
	Exp -> Exp '*' Exp                                 (37)
	Exp -> Exp '/' Exp                                 (38)
	Exp -> Exp '%' Exp                                 (39)
	Exp -> Exp '**' Exp                                (40)
	Exp -> Exp '.' Exp                                 (41)
	Exp -> Lval                                        (42)
	Exp -> '-' Exp                                     (43)
	Exp -> Exp '^'                                     (44)
	Exp -> '$' Exp                                     (45)
	Exp -> '@' Exp                                     (46)
	Exp -> FunCall                                     (47)
	Exp -> FunEmb                                      (48)
	Mat -> '{' ElemList '}'                            (49)
	ElemList -> ExpList                                (50)
	ElemList -> ElemList ';' ExpList                   (51)
	ExpList -> Exp                                     (52)
	ExpList -> ExpList ',' Exp                         (53)
	FunCall -> id '(' ExpList ')'                      (54)
	FunCall -> id '(' ')'                              (55)
	FunEmb -> Zeroes                                   (56)
	FunEmb -> Range                                    (57)
	FunEmb -> Eye                                      (58)
	Zeroes -> zeroes '(' Exp ',' Exp ')'               (59)
	Zeroes -> zeroes '(' Exp ')'                       (60)
	Range -> range '(' Exp ')'                         (61)
	Eye -> eye '(' Exp ')'                             (62)
	InsBlock -> begin VarDec InsList end               (63)
	VarDec -> vars VarListDec                          (64)
	VarListDec -> IdList ':' VarType                   (65)
	VarListDec -> VarListDec ';' IdList ':' VarType    (66)
	IdList -> id                                       (67)
	IdList -> IdList ',' id                            (68)
	InsList -> Instruc                                 (69)
	InsList -> InsList ';' Instruc                     (70)
	While -> while Boolean do Instruc                  (71)
	ForEach -> foreach id in Exp do Instruc            (72)
	Read -> read Exp                                   (73)
	Write -> write ExpList                             (74)
	Return -> return Exp                               (75)
	Boolean -> Exp '<' Exp                             (76)
	Boolean -> Exp '>' Exp                             (77)
	Boolean -> Exp '<=' Exp                            (78)
	Boolean -> Exp '>=' Exp                            (79)
	Boolean -> Exp '=' Exp                             (80)
	Boolean -> Exp '!=' Exp                            (81)
	Boolean -> true                                    (82)
	Boolean -> false                                   (83)
	Boolean -> Boolean '&&' Boolean                    (84)
	Boolean -> Boolean '||' Boolean                    (85)
	Boolean -> Boolean '=' Boolean                     (86)
	Boolean -> '(' Boolean ')'                         (87)
	Boolean -> '!' Boolean                             (88)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	tnum           { TkTNum _ }
	tvec           { TkTVec _ }
	tmat           { TkTMat _ }
	true           { TkTrue _ }
	false          { TkFalse _ }
	string         { TkString _ $$ }
	id             { TkId _ $$ }
	num            { TkNum _ $$ }
	'+'            { TkPlus _ }
	'-'            { TkMinus _ }
	'*'            { TkTimes _ }
	'/'            { TkDiv _ }
	'%'            { TkMod _ }
	'**'           { TkExp _ }
	'.'            { TkDot _ }
	'<'            { TkLess _ }
	'>'            { TkGreat _ }
	'<='           { TkLET _ }
	'>='           { TkGET _ }
	'='            { TkEqual _ }
	'!='           { TkNEqual _ }
	':='           { TkAssign _ }
	'['            { TkLSB _ }
	']'            { TkRSB _ }
	'{'            { TkLCB _ }
	'}'            { TkRCB _ }
	'('            { TkLP  _ }
	')'            { TkRP  _ }
	'$'            { TkDS _ }
	'@'            { TkAt _ }
	'^'            { TkCircum _ }
	':'            { TkColon _ }
	','            { TkComma _ }
	';'            { TkSC _ }
	'&&'           { TkAnd _ }
	'||'           { TkOr _ }
	'!'            { TkNot _ }
	zeroes         { TkFZeroes _ }
	range          { TkFRange _ }
	eye            { TkFEye _ }
	read           { TkRead _ }
	write          { TkWrite _ }
	define         { TkDef _ }
	of             { TkOf _ }
	type           { TkType _ }
	as             { TkAs _ }
	begin          { TkBegin _ }
	end            { TkEnd _ }
	vars           { TkVar _ }
	if             { TkIf _ }
	else           { TkElse _ }
	then           { TkThen _ }
	while          { TkWhile _ }
	do             { TkDo _ }
	foreach        { TkFore _ }
	in             { TkIn _ }
	return         { TkReturn _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	Prog            rule  1
	FunDec          rules 2, 3, 4
	VarListFunc     rules 5, 6
	VarType         rules 7, 8, 9
	Instruc         rules 10, 11
	Matched         rules 12, 13, 14, 15, 16, 17, 18, 19
	Unmatched       rules 20, 21
	Asig            rule  22
	Lval            rules 23, 24, 25, 26, 27
	Access          rules 28, 29
	Ind             rules 30, 31
	Exp             rules 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48
	Mat             rule  49
	ElemList        rules 50, 51
	ExpList         rules 52, 53
	FunCall         rules 54, 55
	FunEmb          rules 56, 57, 58
	Zeroes          rules 59, 60
	Range           rule  61
	Eye             rule  62
	InsBlock        rule  63
	VarDec          rule  64
	VarListDec      rules 65, 66
	IdList          rules 67, 68
	InsList         rules 69, 70
	While           rule  71
	ForEach         rule  72
	Read            rule  73
	Write           rule  74
	Return          rule  75
	Boolean         rules 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	id             reduce using rule 2
	'{'            reduce using rule 2
	read           reduce using rule 2
	write          reduce using rule 2
	define         reduce using rule 2
	begin          reduce using rule 2
	if             reduce using rule 2
	while          reduce using rule 2
	foreach        reduce using rule 2
	return         reduce using rule 2

	Prog           goto state 3
	FunDec         goto state 2

State 1



	FunDec         goto state 2

State 2

	Prog -> FunDec . Instruc                            (rule 1)
	FunDec -> FunDec . define id '(' VarListFunc ')' of type VarType as Instruc    (rule 3)
	FunDec -> FunDec . define id '(' ')' of type VarType as Instruc    (rule 4)

	id             shift, and enter state 17
	'{'            shift, and enter state 18
	read           shift, and enter state 19
	write          shift, and enter state 20
	define         shift, and enter state 21
	begin          shift, and enter state 22
	if             shift, and enter state 23
	while          shift, and enter state 24
	foreach        shift, and enter state 25
	return         shift, and enter state 26

	Instruc        goto state 4
	Matched        goto state 5
	Unmatched      goto state 6
	Asig           goto state 7
	Lval           goto state 8
	Access         goto state 9
	Mat            goto state 10
	InsBlock       goto state 11
	While          goto state 12
	ForEach        goto state 13
	Read           goto state 14
	Write          goto state 15
	Return         goto state 16

State 3

	%start_parser -> Prog .                             (rule 0)

	%eof           accept


State 4

	Prog -> FunDec Instruc .                            (rule 1)

	%eof           reduce using rule 1


State 5

	Instruc -> Matched .                                (rule 10)

	id             reduce using rule 10
	'{'            reduce using rule 10
	';'            reduce using rule 10
	read           reduce using rule 10
	write          reduce using rule 10
	define         reduce using rule 10
	begin          reduce using rule 10
	end            reduce using rule 10
	if             reduce using rule 10
	else           reduce using rule 10
	while          reduce using rule 10
	foreach        reduce using rule 10
	return         reduce using rule 10
	%eof           reduce using rule 10


State 6

	Instruc -> Unmatched .                              (rule 11)

	id             reduce using rule 11
	'{'            reduce using rule 11
	';'            reduce using rule 11
	read           reduce using rule 11
	write          reduce using rule 11
	define         reduce using rule 11
	begin          reduce using rule 11
	end            reduce using rule 11
	if             reduce using rule 11
	else           reduce using rule 11
	while          reduce using rule 11
	foreach        reduce using rule 11
	return         reduce using rule 11
	%eof           reduce using rule 11


State 7

	Matched -> Asig .                                   (rule 13)

	id             reduce using rule 13
	'{'            reduce using rule 13
	';'            reduce using rule 13
	read           reduce using rule 13
	write          reduce using rule 13
	define         reduce using rule 13
	begin          reduce using rule 13
	end            reduce using rule 13
	if             reduce using rule 13
	else           reduce using rule 13
	while          reduce using rule 13
	foreach        reduce using rule 13
	return         reduce using rule 13
	%eof           reduce using rule 13


State 8

	Asig -> Lval . ':=' Exp                             (rule 22)

	':='           shift, and enter state 61


State 9

	Lval -> Access . '[' Exp ']'                        (rule 24)
	Lval -> Access . '[' Exp ',' Exp ']'                (rule 25)
	Lval -> Access . '[' Ind ':' Ind ']'                (rule 26)
	Lval -> Access . '[' Ind ':' Ind ',' Ind ':' Ind ']'    (rule 27)

	'['            shift, and enter state 60


State 10

	Lval -> Mat .                                       (rule 23)
	Access -> Mat .                                     (rule 28)

	id             reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23
	'%'            reduce using rule 23
	'**'           reduce using rule 23
	'.'            reduce using rule 23
	'<'            reduce using rule 23
	'>'            reduce using rule 23
	'<='           reduce using rule 23
	'>='           reduce using rule 23
	'='            reduce using rule 23
	'!='           reduce using rule 23
	':='           reduce using rule 23
	'['            reduce using rule 28
	']'            reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	')'            reduce using rule 23
	'^'            reduce using rule 23
	':'            reduce using rule 23
	','            reduce using rule 23
	';'            reduce using rule 23
	'&&'           reduce using rule 23
	'||'           reduce using rule 23
	read           reduce using rule 23
	write          reduce using rule 23
	define         reduce using rule 23
	begin          reduce using rule 23
	end            reduce using rule 23
	if             reduce using rule 23
	else           reduce using rule 23
	then           reduce using rule 23
	while          reduce using rule 23
	do             reduce using rule 23
	foreach        reduce using rule 23
	return         reduce using rule 23
	%eof           reduce using rule 23


State 11

	Matched -> InsBlock .                               (rule 14)

	id             reduce using rule 14
	'{'            reduce using rule 14
	';'            reduce using rule 14
	read           reduce using rule 14
	write          reduce using rule 14
	define         reduce using rule 14
	begin          reduce using rule 14
	end            reduce using rule 14
	if             reduce using rule 14
	else           reduce using rule 14
	while          reduce using rule 14
	foreach        reduce using rule 14
	return         reduce using rule 14
	%eof           reduce using rule 14


State 12

	Matched -> While .                                  (rule 15)

	id             reduce using rule 15
	'{'            reduce using rule 15
	';'            reduce using rule 15
	read           reduce using rule 15
	write          reduce using rule 15
	define         reduce using rule 15
	begin          reduce using rule 15
	end            reduce using rule 15
	if             reduce using rule 15
	else           reduce using rule 15
	while          reduce using rule 15
	foreach        reduce using rule 15
	return         reduce using rule 15
	%eof           reduce using rule 15


State 13

	Matched -> ForEach .                                (rule 16)

	id             reduce using rule 16
	'{'            reduce using rule 16
	';'            reduce using rule 16
	read           reduce using rule 16
	write          reduce using rule 16
	define         reduce using rule 16
	begin          reduce using rule 16
	end            reduce using rule 16
	if             reduce using rule 16
	else           reduce using rule 16
	while          reduce using rule 16
	foreach        reduce using rule 16
	return         reduce using rule 16
	%eof           reduce using rule 16


State 14

	Matched -> Read .                                   (rule 17)

	id             reduce using rule 17
	'{'            reduce using rule 17
	';'            reduce using rule 17
	read           reduce using rule 17
	write          reduce using rule 17
	define         reduce using rule 17
	begin          reduce using rule 17
	end            reduce using rule 17
	if             reduce using rule 17
	else           reduce using rule 17
	while          reduce using rule 17
	foreach        reduce using rule 17
	return         reduce using rule 17
	%eof           reduce using rule 17


State 15

	Matched -> Write .                                  (rule 18)

	id             reduce using rule 18
	'{'            reduce using rule 18
	';'            reduce using rule 18
	read           reduce using rule 18
	write          reduce using rule 18
	define         reduce using rule 18
	begin          reduce using rule 18
	end            reduce using rule 18
	if             reduce using rule 18
	else           reduce using rule 18
	while          reduce using rule 18
	foreach        reduce using rule 18
	return         reduce using rule 18
	%eof           reduce using rule 18


State 16

	Matched -> Return .                                 (rule 19)

	id             reduce using rule 19
	'{'            reduce using rule 19
	';'            reduce using rule 19
	read           reduce using rule 19
	write          reduce using rule 19
	define         reduce using rule 19
	begin          reduce using rule 19
	end            reduce using rule 19
	if             reduce using rule 19
	else           reduce using rule 19
	while          reduce using rule 19
	foreach        reduce using rule 19
	return         reduce using rule 19
	%eof           reduce using rule 19


State 17

	Access -> id .                                      (rule 29)

	'['            reduce using rule 29


State 18

	Mat -> '{' . ElemList '}'                           (rule 49)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 55
	Mat            goto state 10
	ElemList       goto state 58
	ExpList        goto state 59
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 19

	Read -> read . Exp                                  (rule 73)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 57
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 20

	Write -> write . ExpList                            (rule 74)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 55
	Mat            goto state 10
	ExpList        goto state 56
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 21

	FunDec -> FunDec define . id '(' VarListFunc ')' of type VarType as Instruc    (rule 3)
	FunDec -> FunDec define . id '(' ')' of type VarType as Instruc    (rule 4)

	id             shift, and enter state 54


State 22

	InsBlock -> begin . VarDec InsList end              (rule 63)

	vars           shift, and enter state 53

	VarDec         goto state 52

State 23

	Matched -> if . Boolean then Matched else Matched    (rule 12)
	Unmatched -> if . Boolean then Instruc              (rule 20)
	Unmatched -> if . Boolean then Matched else Unmatched    (rule 21)

	true           shift, and enter state 47
	false          shift, and enter state 48
	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 49
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	'!'            shift, and enter state 50
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 45
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33
	Boolean        goto state 51

State 24

	While -> while . Boolean do Instruc                 (rule 71)

	true           shift, and enter state 47
	false          shift, and enter state 48
	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 49
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	'!'            shift, and enter state 50
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 45
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33
	Boolean        goto state 46

State 25

	ForEach -> foreach . id in Exp do Instruc           (rule 72)

	id             shift, and enter state 44


State 26

	Return -> return . Exp                              (rule 75)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 28
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 27

	Exp -> Lval .                                       (rule 42)

	id             reduce using rule 42
	'+'            reduce using rule 42
	'-'            reduce using rule 42
	'*'            reduce using rule 42
	'/'            reduce using rule 42
	'%'            reduce using rule 42
	'**'           reduce using rule 42
	'.'            reduce using rule 42
	'<'            reduce using rule 42
	'>'            reduce using rule 42
	'<='           reduce using rule 42
	'>='           reduce using rule 42
	'='            reduce using rule 42
	'!='           reduce using rule 42
	']'            reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	')'            reduce using rule 42
	'^'            reduce using rule 42
	':'            reduce using rule 42
	','            reduce using rule 42
	';'            reduce using rule 42
	'&&'           reduce using rule 42
	'||'           reduce using rule 42
	read           reduce using rule 42
	write          reduce using rule 42
	define         reduce using rule 42
	begin          reduce using rule 42
	end            reduce using rule 42
	if             reduce using rule 42
	else           reduce using rule 42
	then           reduce using rule 42
	while          reduce using rule 42
	do             reduce using rule 42
	foreach        reduce using rule 42
	return         reduce using rule 42
	%eof           reduce using rule 42


State 28

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	Return -> return Exp .                              (rule 75)

	id             reduce using rule 75
	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	'{'            reduce using rule 75
	'^'            shift, and enter state 75
	';'            reduce using rule 75
	read           reduce using rule 75
	write          reduce using rule 75
	define         reduce using rule 75
	begin          reduce using rule 75
	end            reduce using rule 75
	if             reduce using rule 75
	else           reduce using rule 75
	while          reduce using rule 75
	foreach        reduce using rule 75
	return         reduce using rule 75
	%eof           reduce using rule 75


State 29

	Exp -> FunCall .                                    (rule 47)

	id             reduce using rule 47
	'+'            reduce using rule 47
	'-'            reduce using rule 47
	'*'            reduce using rule 47
	'/'            reduce using rule 47
	'%'            reduce using rule 47
	'**'           reduce using rule 47
	'.'            reduce using rule 47
	'<'            reduce using rule 47
	'>'            reduce using rule 47
	'<='           reduce using rule 47
	'>='           reduce using rule 47
	'='            reduce using rule 47
	'!='           reduce using rule 47
	']'            reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47
	')'            reduce using rule 47
	'^'            reduce using rule 47
	':'            reduce using rule 47
	','            reduce using rule 47
	';'            reduce using rule 47
	'&&'           reduce using rule 47
	'||'           reduce using rule 47
	read           reduce using rule 47
	write          reduce using rule 47
	define         reduce using rule 47
	begin          reduce using rule 47
	end            reduce using rule 47
	if             reduce using rule 47
	else           reduce using rule 47
	then           reduce using rule 47
	while          reduce using rule 47
	do             reduce using rule 47
	foreach        reduce using rule 47
	return         reduce using rule 47
	%eof           reduce using rule 47


State 30

	Exp -> FunEmb .                                     (rule 48)

	id             reduce using rule 48
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'*'            reduce using rule 48
	'/'            reduce using rule 48
	'%'            reduce using rule 48
	'**'           reduce using rule 48
	'.'            reduce using rule 48
	'<'            reduce using rule 48
	'>'            reduce using rule 48
	'<='           reduce using rule 48
	'>='           reduce using rule 48
	'='            reduce using rule 48
	'!='           reduce using rule 48
	']'            reduce using rule 48
	'{'            reduce using rule 48
	'}'            reduce using rule 48
	')'            reduce using rule 48
	'^'            reduce using rule 48
	':'            reduce using rule 48
	','            reduce using rule 48
	';'            reduce using rule 48
	'&&'           reduce using rule 48
	'||'           reduce using rule 48
	read           reduce using rule 48
	write          reduce using rule 48
	define         reduce using rule 48
	begin          reduce using rule 48
	end            reduce using rule 48
	if             reduce using rule 48
	else           reduce using rule 48
	then           reduce using rule 48
	while          reduce using rule 48
	do             reduce using rule 48
	foreach        reduce using rule 48
	return         reduce using rule 48
	%eof           reduce using rule 48


State 31

	FunEmb -> Zeroes .                                  (rule 56)

	id             reduce using rule 56
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	'%'            reduce using rule 56
	'**'           reduce using rule 56
	'.'            reduce using rule 56
	'<'            reduce using rule 56
	'>'            reduce using rule 56
	'<='           reduce using rule 56
	'>='           reduce using rule 56
	'='            reduce using rule 56
	'!='           reduce using rule 56
	']'            reduce using rule 56
	'{'            reduce using rule 56
	'}'            reduce using rule 56
	')'            reduce using rule 56
	'^'            reduce using rule 56
	':'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	'&&'           reduce using rule 56
	'||'           reduce using rule 56
	read           reduce using rule 56
	write          reduce using rule 56
	define         reduce using rule 56
	begin          reduce using rule 56
	end            reduce using rule 56
	if             reduce using rule 56
	else           reduce using rule 56
	then           reduce using rule 56
	while          reduce using rule 56
	do             reduce using rule 56
	foreach        reduce using rule 56
	return         reduce using rule 56
	%eof           reduce using rule 56


State 32

	FunEmb -> Range .                                   (rule 57)

	id             reduce using rule 57
	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'*'            reduce using rule 57
	'/'            reduce using rule 57
	'%'            reduce using rule 57
	'**'           reduce using rule 57
	'.'            reduce using rule 57
	'<'            reduce using rule 57
	'>'            reduce using rule 57
	'<='           reduce using rule 57
	'>='           reduce using rule 57
	'='            reduce using rule 57
	'!='           reduce using rule 57
	']'            reduce using rule 57
	'{'            reduce using rule 57
	'}'            reduce using rule 57
	')'            reduce using rule 57
	'^'            reduce using rule 57
	':'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	'&&'           reduce using rule 57
	'||'           reduce using rule 57
	read           reduce using rule 57
	write          reduce using rule 57
	define         reduce using rule 57
	begin          reduce using rule 57
	end            reduce using rule 57
	if             reduce using rule 57
	else           reduce using rule 57
	then           reduce using rule 57
	while          reduce using rule 57
	do             reduce using rule 57
	foreach        reduce using rule 57
	return         reduce using rule 57
	%eof           reduce using rule 57


State 33

	FunEmb -> Eye .                                     (rule 58)

	id             reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'%'            reduce using rule 58
	'**'           reduce using rule 58
	'.'            reduce using rule 58
	'<'            reduce using rule 58
	'>'            reduce using rule 58
	'<='           reduce using rule 58
	'>='           reduce using rule 58
	'='            reduce using rule 58
	'!='           reduce using rule 58
	']'            reduce using rule 58
	'{'            reduce using rule 58
	'}'            reduce using rule 58
	')'            reduce using rule 58
	'^'            reduce using rule 58
	':'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58
	'&&'           reduce using rule 58
	'||'           reduce using rule 58
	read           reduce using rule 58
	write          reduce using rule 58
	define         reduce using rule 58
	begin          reduce using rule 58
	end            reduce using rule 58
	if             reduce using rule 58
	else           reduce using rule 58
	then           reduce using rule 58
	while          reduce using rule 58
	do             reduce using rule 58
	foreach        reduce using rule 58
	return         reduce using rule 58
	%eof           reduce using rule 58


State 34

	Exp -> string .                                     (rule 33)

	id             reduce using rule 33
	'+'            reduce using rule 33
	'-'            reduce using rule 33
	'*'            reduce using rule 33
	'/'            reduce using rule 33
	'%'            reduce using rule 33
	'**'           reduce using rule 33
	'.'            reduce using rule 33
	'<'            reduce using rule 33
	'>'            reduce using rule 33
	'<='           reduce using rule 33
	'>='           reduce using rule 33
	'='            reduce using rule 33
	'!='           reduce using rule 33
	']'            reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	')'            reduce using rule 33
	'^'            reduce using rule 33
	':'            reduce using rule 33
	','            reduce using rule 33
	';'            reduce using rule 33
	'&&'           reduce using rule 33
	'||'           reduce using rule 33
	read           reduce using rule 33
	write          reduce using rule 33
	define         reduce using rule 33
	begin          reduce using rule 33
	end            reduce using rule 33
	if             reduce using rule 33
	else           reduce using rule 33
	then           reduce using rule 33
	while          reduce using rule 33
	do             reduce using rule 33
	foreach        reduce using rule 33
	return         reduce using rule 33
	%eof           reduce using rule 33


State 35

	Access -> id .                                      (rule 29)
	FunCall -> id . '(' ExpList ')'                     (rule 54)
	FunCall -> id . '(' ')'                             (rule 55)

	'['            reduce using rule 29
	'('            shift, and enter state 104


State 36

	Exp -> num .                                        (rule 32)

	id             reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'*'            reduce using rule 32
	'/'            reduce using rule 32
	'%'            reduce using rule 32
	'**'           reduce using rule 32
	'.'            reduce using rule 32
	'<'            reduce using rule 32
	'>'            reduce using rule 32
	'<='           reduce using rule 32
	'>='           reduce using rule 32
	'='            reduce using rule 32
	'!='           reduce using rule 32
	']'            reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	')'            reduce using rule 32
	'^'            reduce using rule 32
	':'            reduce using rule 32
	','            reduce using rule 32
	';'            reduce using rule 32
	'&&'           reduce using rule 32
	'||'           reduce using rule 32
	read           reduce using rule 32
	write          reduce using rule 32
	define         reduce using rule 32
	begin          reduce using rule 32
	end            reduce using rule 32
	if             reduce using rule 32
	else           reduce using rule 32
	then           reduce using rule 32
	while          reduce using rule 32
	do             reduce using rule 32
	foreach        reduce using rule 32
	return         reduce using rule 32
	%eof           reduce using rule 32


State 37

	Exp -> '-' . Exp                                    (rule 43)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 103
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 38

	Exp -> '(' . Exp ')'                                (rule 34)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 102
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 39

	Exp -> '$' . Exp                                    (rule 45)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 101
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 40

	Exp -> '@' . Exp                                    (rule 46)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 100
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 41

	Zeroes -> zeroes . '(' Exp ',' Exp ')'              (rule 59)
	Zeroes -> zeroes . '(' Exp ')'                      (rule 60)

	'('            shift, and enter state 99


State 42

	Range -> range . '(' Exp ')'                        (rule 61)

	'('            shift, and enter state 98


State 43

	Eye -> eye . '(' Exp ')'                            (rule 62)

	'('            shift, and enter state 97


State 44

	ForEach -> foreach id . in Exp do Instruc           (rule 72)

	in             shift, and enter state 96


State 45

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	Boolean -> Exp . '<' Exp                            (rule 76)
	Boolean -> Exp . '>' Exp                            (rule 77)
	Boolean -> Exp . '<=' Exp                           (rule 78)
	Boolean -> Exp . '>=' Exp                           (rule 79)
	Boolean -> Exp . '=' Exp                            (rule 80)
	Boolean -> Exp . '!=' Exp                           (rule 81)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	'<'            shift, and enter state 90
	'>'            shift, and enter state 91
	'<='           shift, and enter state 92
	'>='           shift, and enter state 93
	'='            shift, and enter state 94
	'!='           shift, and enter state 95
	'^'            shift, and enter state 75


State 46

	While -> while Boolean . do Instruc                 (rule 71)
	Boolean -> Boolean . '&&' Boolean                   (rule 84)
	Boolean -> Boolean . '||' Boolean                   (rule 85)
	Boolean -> Boolean . '=' Boolean                    (rule 86)

	'='            shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	do             shift, and enter state 89


State 47

	Boolean -> true .                                   (rule 82)

	'='            reduce using rule 82
	')'            reduce using rule 82
	'&&'           reduce using rule 82
	'||'           reduce using rule 82
	then           reduce using rule 82
	do             reduce using rule 82


State 48

	Boolean -> false .                                  (rule 83)

	'='            reduce using rule 83
	')'            reduce using rule 83
	'&&'           reduce using rule 83
	'||'           reduce using rule 83
	then           reduce using rule 83
	do             reduce using rule 83


State 49

	Exp -> '(' . Exp ')'                                (rule 34)
	Boolean -> '(' . Boolean ')'                        (rule 87)

	true           shift, and enter state 47
	false          shift, and enter state 48
	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 49
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	'!'            shift, and enter state 50
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 87
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33
	Boolean        goto state 88

State 50

	Boolean -> '!' . Boolean                            (rule 88)

	true           shift, and enter state 47
	false          shift, and enter state 48
	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 49
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	'!'            shift, and enter state 50
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 45
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33
	Boolean        goto state 86

State 51

	Matched -> if Boolean . then Matched else Matched    (rule 12)
	Unmatched -> if Boolean . then Instruc              (rule 20)
	Unmatched -> if Boolean . then Matched else Unmatched    (rule 21)
	Boolean -> Boolean . '&&' Boolean                   (rule 84)
	Boolean -> Boolean . '||' Boolean                   (rule 85)
	Boolean -> Boolean . '=' Boolean                    (rule 86)

	'='            shift, and enter state 82
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84
	then           shift, and enter state 85


State 52

	InsBlock -> begin VarDec . InsList end              (rule 63)

	id             shift, and enter state 17
	'{'            shift, and enter state 18
	read           shift, and enter state 19
	write          shift, and enter state 20
	begin          shift, and enter state 22
	if             shift, and enter state 23
	while          shift, and enter state 24
	foreach        shift, and enter state 25
	return         shift, and enter state 26

	Instruc        goto state 80
	Matched        goto state 5
	Unmatched      goto state 6
	Asig           goto state 7
	Lval           goto state 8
	Access         goto state 9
	Mat            goto state 10
	InsBlock       goto state 11
	InsList        goto state 81
	While          goto state 12
	ForEach        goto state 13
	Read           goto state 14
	Write          goto state 15
	Return         goto state 16

State 53

	VarDec -> vars . VarListDec                         (rule 64)

	id             shift, and enter state 79

	VarListDec     goto state 77
	IdList         goto state 78

State 54

	FunDec -> FunDec define id . '(' VarListFunc ')' of type VarType as Instruc    (rule 3)
	FunDec -> FunDec define id . '(' ')' of type VarType as Instruc    (rule 4)

	'('            shift, and enter state 76


State 55

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	ExpList -> Exp .                                    (rule 52)

	id             reduce using rule 52
	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	'{'            reduce using rule 52
	'}'            reduce using rule 52
	')'            reduce using rule 52
	'^'            shift, and enter state 75
	','            reduce using rule 52
	';'            reduce using rule 52
	read           reduce using rule 52
	write          reduce using rule 52
	define         reduce using rule 52
	begin          reduce using rule 52
	end            reduce using rule 52
	if             reduce using rule 52
	else           reduce using rule 52
	while          reduce using rule 52
	foreach        reduce using rule 52
	return         reduce using rule 52
	%eof           reduce using rule 52


State 56

	ExpList -> ExpList . ',' Exp                        (rule 53)
	Write -> write ExpList .                            (rule 74)

	id             reduce using rule 74
	'{'            reduce using rule 74
	','            shift, and enter state 65
	';'            reduce using rule 74
	read           reduce using rule 74
	write          reduce using rule 74
	define         reduce using rule 74
	begin          reduce using rule 74
	end            reduce using rule 74
	if             reduce using rule 74
	else           reduce using rule 74
	while          reduce using rule 74
	foreach        reduce using rule 74
	return         reduce using rule 74
	%eof           reduce using rule 74


State 57

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	Read -> read Exp .                                  (rule 73)

	id             reduce using rule 73
	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	'{'            reduce using rule 73
	'^'            shift, and enter state 75
	';'            reduce using rule 73
	read           reduce using rule 73
	write          reduce using rule 73
	define         reduce using rule 73
	begin          reduce using rule 73
	end            reduce using rule 73
	if             reduce using rule 73
	else           reduce using rule 73
	while          reduce using rule 73
	foreach        reduce using rule 73
	return         reduce using rule 73
	%eof           reduce using rule 73


State 58

	Mat -> '{' ElemList . '}'                           (rule 49)
	ElemList -> ElemList . ';' ExpList                  (rule 51)

	'}'            shift, and enter state 66
	';'            shift, and enter state 67


State 59

	ElemList -> ExpList .                               (rule 50)
	ExpList -> ExpList . ',' Exp                        (rule 53)

	'}'            reduce using rule 50
	','            shift, and enter state 65
	';'            reduce using rule 50


State 60

	Lval -> Access '[' . Exp ']'                        (rule 24)
	Lval -> Access '[' . Exp ',' Exp ']'                (rule 25)
	Lval -> Access '[' . Ind ':' Ind ']'                (rule 26)
	Lval -> Access '[' . Ind ':' Ind ',' Ind ':' Ind ']'    (rule 27)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	':'            reduce using rule 30
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Ind            goto state 63
	Exp            goto state 64
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 61

	Asig -> Lval ':=' . Exp                             (rule 22)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 62
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 62

	Asig -> Lval ':=' Exp .                             (rule 22)
	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)

	id             reduce using rule 22
	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	'{'            reduce using rule 22
	'^'            shift, and enter state 75
	';'            reduce using rule 22
	read           reduce using rule 22
	write          reduce using rule 22
	define         reduce using rule 22
	begin          reduce using rule 22
	end            reduce using rule 22
	if             reduce using rule 22
	else           reduce using rule 22
	while          reduce using rule 22
	foreach        reduce using rule 22
	return         reduce using rule 22
	%eof           reduce using rule 22


State 63

	Lval -> Access '[' Ind . ':' Ind ']'                (rule 26)
	Lval -> Access '[' Ind . ':' Ind ',' Ind ':' Ind ']'    (rule 27)

	':'            shift, and enter state 144


State 64

	Lval -> Access '[' Exp . ']'                        (rule 24)
	Lval -> Access '[' Exp . ',' Exp ']'                (rule 25)
	Ind -> Exp .                                        (rule 31)
	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	']'            shift, and enter state 142
	'^'            shift, and enter state 75
	':'            reduce using rule 31
	','            shift, and enter state 143


State 65

	ExpList -> ExpList ',' . Exp                        (rule 53)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 141
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 66

	Mat -> '{' ElemList '}' .                           (rule 49)

	id             reduce using rule 49
	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'*'            reduce using rule 49
	'/'            reduce using rule 49
	'%'            reduce using rule 49
	'**'           reduce using rule 49
	'.'            reduce using rule 49
	'<'            reduce using rule 49
	'>'            reduce using rule 49
	'<='           reduce using rule 49
	'>='           reduce using rule 49
	'='            reduce using rule 49
	'!='           reduce using rule 49
	':='           reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'{'            reduce using rule 49
	'}'            reduce using rule 49
	')'            reduce using rule 49
	'^'            reduce using rule 49
	':'            reduce using rule 49
	','            reduce using rule 49
	';'            reduce using rule 49
	'&&'           reduce using rule 49
	'||'           reduce using rule 49
	read           reduce using rule 49
	write          reduce using rule 49
	define         reduce using rule 49
	begin          reduce using rule 49
	end            reduce using rule 49
	if             reduce using rule 49
	else           reduce using rule 49
	then           reduce using rule 49
	while          reduce using rule 49
	do             reduce using rule 49
	foreach        reduce using rule 49
	return         reduce using rule 49
	%eof           reduce using rule 49


State 67

	ElemList -> ElemList ';' . ExpList                  (rule 51)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 55
	Mat            goto state 10
	ExpList        goto state 140
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 68

	Exp -> Exp '+' . Exp                                (rule 35)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 139
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 69

	Exp -> Exp '-' . Exp                                (rule 36)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 138
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 70

	Exp -> Exp '*' . Exp                                (rule 37)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 137
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 71

	Exp -> Exp '/' . Exp                                (rule 38)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 136
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 72

	Exp -> Exp '%' . Exp                                (rule 39)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 135
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 73

	Exp -> Exp '**' . Exp                               (rule 40)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 134
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 74

	Exp -> Exp '.' . Exp                                (rule 41)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 133
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 75

	Exp -> Exp '^' .                                    (rule 44)

	id             reduce using rule 44
	'+'            reduce using rule 44
	'-'            reduce using rule 44
	'*'            reduce using rule 44
	'/'            reduce using rule 44
	'%'            reduce using rule 44
	'**'           reduce using rule 44
	'.'            reduce using rule 44
	'<'            reduce using rule 44
	'>'            reduce using rule 44
	'<='           reduce using rule 44
	'>='           reduce using rule 44
	'='            reduce using rule 44
	'!='           reduce using rule 44
	']'            reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	')'            reduce using rule 44
	'^'            reduce using rule 44
	':'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44
	'&&'           reduce using rule 44
	'||'           reduce using rule 44
	read           reduce using rule 44
	write          reduce using rule 44
	define         reduce using rule 44
	begin          reduce using rule 44
	end            reduce using rule 44
	if             reduce using rule 44
	else           reduce using rule 44
	then           reduce using rule 44
	while          reduce using rule 44
	do             reduce using rule 44
	foreach        reduce using rule 44
	return         reduce using rule 44
	%eof           reduce using rule 44


State 76

	FunDec -> FunDec define id '(' . VarListFunc ')' of type VarType as Instruc    (rule 3)
	FunDec -> FunDec define id '(' . ')' of type VarType as Instruc    (rule 4)

	id             shift, and enter state 131
	')'            shift, and enter state 132

	VarListFunc    goto state 130

State 77

	VarDec -> vars VarListDec .                         (rule 64)
	VarListDec -> VarListDec . ';' IdList ':' VarType    (rule 66)

	id             reduce using rule 64
	'{'            reduce using rule 64
	';'            shift, and enter state 129
	read           reduce using rule 64
	write          reduce using rule 64
	begin          reduce using rule 64
	if             reduce using rule 64
	while          reduce using rule 64
	foreach        reduce using rule 64
	return         reduce using rule 64


State 78

	VarListDec -> IdList . ':' VarType                  (rule 65)
	IdList -> IdList . ',' id                           (rule 68)

	':'            shift, and enter state 127
	','            shift, and enter state 128


State 79

	IdList -> id .                                      (rule 67)

	':'            reduce using rule 67
	','            reduce using rule 67


State 80

	InsList -> Instruc .                                (rule 69)

	';'            reduce using rule 69
	end            reduce using rule 69


State 81

	InsBlock -> begin VarDec InsList . end              (rule 63)
	InsList -> InsList . ';' Instruc                    (rule 70)

	';'            shift, and enter state 125
	end            shift, and enter state 126


State 82

	Boolean -> Boolean '=' . Boolean                    (rule 86)

	true           shift, and enter state 47
	false          shift, and enter state 48
	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 49
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	'!'            shift, and enter state 50
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 45
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33
	Boolean        goto state 124

State 83

	Boolean -> Boolean '&&' . Boolean                   (rule 84)

	true           shift, and enter state 47
	false          shift, and enter state 48
	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 49
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	'!'            shift, and enter state 50
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 45
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33
	Boolean        goto state 123

State 84

	Boolean -> Boolean '||' . Boolean                   (rule 85)

	true           shift, and enter state 47
	false          shift, and enter state 48
	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 49
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	'!'            shift, and enter state 50
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 45
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33
	Boolean        goto state 122

State 85

	Matched -> if Boolean then . Matched else Matched    (rule 12)
	Unmatched -> if Boolean then . Instruc              (rule 20)
	Unmatched -> if Boolean then . Matched else Unmatched    (rule 21)

	id             shift, and enter state 17
	'{'            shift, and enter state 18
	read           shift, and enter state 19
	write          shift, and enter state 20
	begin          shift, and enter state 22
	if             shift, and enter state 23
	while          shift, and enter state 24
	foreach        shift, and enter state 25
	return         shift, and enter state 26

	Instruc        goto state 120
	Matched        goto state 121
	Unmatched      goto state 6
	Asig           goto state 7
	Lval           goto state 8
	Access         goto state 9
	Mat            goto state 10
	InsBlock       goto state 11
	While          goto state 12
	ForEach        goto state 13
	Read           goto state 14
	Write          goto state 15
	Return         goto state 16

State 86

	Boolean -> Boolean . '&&' Boolean                   (rule 84)
	Boolean -> Boolean . '||' Boolean                   (rule 85)
	Boolean -> Boolean . '=' Boolean                    (rule 86)
	Boolean -> '!' Boolean .                            (rule 88)

	'='            shift, and enter state 82
	')'            reduce using rule 88
	'&&'           reduce using rule 88
	'||'           reduce using rule 88
	then           reduce using rule 88
	do             reduce using rule 88


State 87

	Exp -> '(' Exp . ')'                                (rule 34)
	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	Boolean -> Exp . '<' Exp                            (rule 76)
	Boolean -> Exp . '>' Exp                            (rule 77)
	Boolean -> Exp . '<=' Exp                           (rule 78)
	Boolean -> Exp . '>=' Exp                           (rule 79)
	Boolean -> Exp . '=' Exp                            (rule 80)
	Boolean -> Exp . '!=' Exp                           (rule 81)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	'<'            shift, and enter state 90
	'>'            shift, and enter state 91
	'<='           shift, and enter state 92
	'>='           shift, and enter state 93
	'='            shift, and enter state 94
	'!='           shift, and enter state 95
	')'            shift, and enter state 107
	'^'            shift, and enter state 75


State 88

	Boolean -> Boolean . '&&' Boolean                   (rule 84)
	Boolean -> Boolean . '||' Boolean                   (rule 85)
	Boolean -> Boolean . '=' Boolean                    (rule 86)
	Boolean -> '(' Boolean . ')'                        (rule 87)

	'='            shift, and enter state 82
	')'            shift, and enter state 119
	'&&'           shift, and enter state 83
	'||'           shift, and enter state 84


State 89

	While -> while Boolean do . Instruc                 (rule 71)

	id             shift, and enter state 17
	'{'            shift, and enter state 18
	read           shift, and enter state 19
	write          shift, and enter state 20
	begin          shift, and enter state 22
	if             shift, and enter state 23
	while          shift, and enter state 24
	foreach        shift, and enter state 25
	return         shift, and enter state 26

	Instruc        goto state 118
	Matched        goto state 5
	Unmatched      goto state 6
	Asig           goto state 7
	Lval           goto state 8
	Access         goto state 9
	Mat            goto state 10
	InsBlock       goto state 11
	While          goto state 12
	ForEach        goto state 13
	Read           goto state 14
	Write          goto state 15
	Return         goto state 16

State 90

	Boolean -> Exp '<' . Exp                            (rule 76)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 117
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 91

	Boolean -> Exp '>' . Exp                            (rule 77)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 116
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 92

	Boolean -> Exp '<=' . Exp                           (rule 78)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 115
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 93

	Boolean -> Exp '>=' . Exp                           (rule 79)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 114
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 94

	Boolean -> Exp '=' . Exp                            (rule 80)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 113
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 95

	Boolean -> Exp '!=' . Exp                           (rule 81)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 112
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 96

	ForEach -> foreach id in . Exp do Instruc           (rule 72)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 111
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 97

	Eye -> eye '(' . Exp ')'                            (rule 62)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 110
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 98

	Range -> range '(' . Exp ')'                        (rule 61)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 109
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 99

	Zeroes -> zeroes '(' . Exp ',' Exp ')'              (rule 59)
	Zeroes -> zeroes '(' . Exp ')'                      (rule 60)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 108
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 100

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	Exp -> '@' Exp .                                    (rule 46)

	id             reduce using rule 46
	'+'            reduce using rule 46
	'-'            reduce using rule 46
	'*'            reduce using rule 46
	'/'            reduce using rule 46
	'%'            reduce using rule 46
	'**'           shift, and enter state 73
	'.'            reduce using rule 46
	'<'            reduce using rule 46
	'>'            reduce using rule 46
	'<='           reduce using rule 46
	'>='           reduce using rule 46
	'='            reduce using rule 46
	'!='           reduce using rule 46
	']'            reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46
	')'            reduce using rule 46
	'^'            reduce using rule 46
	':'            reduce using rule 46
	','            reduce using rule 46
	';'            reduce using rule 46
	'&&'           reduce using rule 46
	'||'           reduce using rule 46
	read           reduce using rule 46
	write          reduce using rule 46
	define         reduce using rule 46
	begin          reduce using rule 46
	end            reduce using rule 46
	if             reduce using rule 46
	else           reduce using rule 46
	then           reduce using rule 46
	while          reduce using rule 46
	do             reduce using rule 46
	foreach        reduce using rule 46
	return         reduce using rule 46
	%eof           reduce using rule 46


State 101

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	Exp -> '$' Exp .                                    (rule 45)

	id             reduce using rule 45
	'+'            reduce using rule 45
	'-'            reduce using rule 45
	'*'            reduce using rule 45
	'/'            reduce using rule 45
	'%'            reduce using rule 45
	'**'           shift, and enter state 73
	'.'            reduce using rule 45
	'<'            reduce using rule 45
	'>'            reduce using rule 45
	'<='           reduce using rule 45
	'>='           reduce using rule 45
	'='            reduce using rule 45
	'!='           reduce using rule 45
	']'            reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	')'            reduce using rule 45
	'^'            reduce using rule 45
	':'            reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45
	'&&'           reduce using rule 45
	'||'           reduce using rule 45
	read           reduce using rule 45
	write          reduce using rule 45
	define         reduce using rule 45
	begin          reduce using rule 45
	end            reduce using rule 45
	if             reduce using rule 45
	else           reduce using rule 45
	then           reduce using rule 45
	while          reduce using rule 45
	do             reduce using rule 45
	foreach        reduce using rule 45
	return         reduce using rule 45
	%eof           reduce using rule 45


State 102

	Exp -> '(' Exp . ')'                                (rule 34)
	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	')'            shift, and enter state 107
	'^'            shift, and enter state 75


State 103

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> '-' Exp .                                    (rule 43)
	Exp -> Exp . '^'                                    (rule 44)

	id             reduce using rule 43
	'+'            reduce using rule 43
	'-'            reduce using rule 43
	'*'            reduce using rule 43
	'/'            reduce using rule 43
	'%'            reduce using rule 43
	'**'           shift, and enter state 73
	'.'            reduce using rule 43
	'<'            reduce using rule 43
	'>'            reduce using rule 43
	'<='           reduce using rule 43
	'>='           reduce using rule 43
	'='            reduce using rule 43
	'!='           reduce using rule 43
	']'            reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	')'            reduce using rule 43
	'^'            reduce using rule 43
	':'            reduce using rule 43
	','            reduce using rule 43
	';'            reduce using rule 43
	'&&'           reduce using rule 43
	'||'           reduce using rule 43
	read           reduce using rule 43
	write          reduce using rule 43
	define         reduce using rule 43
	begin          reduce using rule 43
	end            reduce using rule 43
	if             reduce using rule 43
	else           reduce using rule 43
	then           reduce using rule 43
	while          reduce using rule 43
	do             reduce using rule 43
	foreach        reduce using rule 43
	return         reduce using rule 43
	%eof           reduce using rule 43


State 104

	FunCall -> id '(' . ExpList ')'                     (rule 54)
	FunCall -> id '(' . ')'                             (rule 55)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	')'            shift, and enter state 106
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 55
	Mat            goto state 10
	ExpList        goto state 105
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 105

	ExpList -> ExpList . ',' Exp                        (rule 53)
	FunCall -> id '(' ExpList . ')'                     (rule 54)

	')'            shift, and enter state 165
	','            shift, and enter state 65


State 106

	FunCall -> id '(' ')' .                             (rule 55)

	id             reduce using rule 55
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	'%'            reduce using rule 55
	'**'           reduce using rule 55
	'.'            reduce using rule 55
	'<'            reduce using rule 55
	'>'            reduce using rule 55
	'<='           reduce using rule 55
	'>='           reduce using rule 55
	'='            reduce using rule 55
	'!='           reduce using rule 55
	']'            reduce using rule 55
	'{'            reduce using rule 55
	'}'            reduce using rule 55
	')'            reduce using rule 55
	'^'            reduce using rule 55
	':'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	'&&'           reduce using rule 55
	'||'           reduce using rule 55
	read           reduce using rule 55
	write          reduce using rule 55
	define         reduce using rule 55
	begin          reduce using rule 55
	end            reduce using rule 55
	if             reduce using rule 55
	else           reduce using rule 55
	then           reduce using rule 55
	while          reduce using rule 55
	do             reduce using rule 55
	foreach        reduce using rule 55
	return         reduce using rule 55
	%eof           reduce using rule 55


State 107

	Exp -> '(' Exp ')' .                                (rule 34)

	id             reduce using rule 34
	'+'            reduce using rule 34
	'-'            reduce using rule 34
	'*'            reduce using rule 34
	'/'            reduce using rule 34
	'%'            reduce using rule 34
	'**'           reduce using rule 34
	'.'            reduce using rule 34
	'<'            reduce using rule 34
	'>'            reduce using rule 34
	'<='           reduce using rule 34
	'>='           reduce using rule 34
	'='            reduce using rule 34
	'!='           reduce using rule 34
	']'            reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	')'            reduce using rule 34
	'^'            reduce using rule 34
	':'            reduce using rule 34
	','            reduce using rule 34
	';'            reduce using rule 34
	'&&'           reduce using rule 34
	'||'           reduce using rule 34
	read           reduce using rule 34
	write          reduce using rule 34
	define         reduce using rule 34
	begin          reduce using rule 34
	end            reduce using rule 34
	if             reduce using rule 34
	else           reduce using rule 34
	then           reduce using rule 34
	while          reduce using rule 34
	do             reduce using rule 34
	foreach        reduce using rule 34
	return         reduce using rule 34
	%eof           reduce using rule 34


State 108

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	Zeroes -> zeroes '(' Exp . ',' Exp ')'              (rule 59)
	Zeroes -> zeroes '(' Exp . ')'                      (rule 60)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	')'            shift, and enter state 163
	'^'            shift, and enter state 75
	','            shift, and enter state 164


State 109

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	Range -> range '(' Exp . ')'                        (rule 61)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	')'            shift, and enter state 162
	'^'            shift, and enter state 75


State 110

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	Eye -> eye '(' Exp . ')'                            (rule 62)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	')'            shift, and enter state 161
	'^'            shift, and enter state 75


State 111

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	ForEach -> foreach id in Exp . do Instruc           (rule 72)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	'^'            shift, and enter state 75
	do             shift, and enter state 160


State 112

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	Boolean -> Exp '!=' Exp .                           (rule 81)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	'='            reduce using rule 81
	')'            reduce using rule 81
	'^'            shift, and enter state 75
	'&&'           reduce using rule 81
	'||'           reduce using rule 81
	then           reduce using rule 81
	do             reduce using rule 81


State 113

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	Boolean -> Exp '=' Exp .                            (rule 80)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	'='            reduce using rule 80
	')'            reduce using rule 80
	'^'            shift, and enter state 75
	'&&'           reduce using rule 80
	'||'           reduce using rule 80
	then           reduce using rule 80
	do             reduce using rule 80


State 114

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	Boolean -> Exp '>=' Exp .                           (rule 79)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	'='            reduce using rule 79
	')'            reduce using rule 79
	'^'            shift, and enter state 75
	'&&'           reduce using rule 79
	'||'           reduce using rule 79
	then           reduce using rule 79
	do             reduce using rule 79


State 115

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	Boolean -> Exp '<=' Exp .                           (rule 78)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	'='            reduce using rule 78
	')'            reduce using rule 78
	'^'            shift, and enter state 75
	'&&'           reduce using rule 78
	'||'           reduce using rule 78
	then           reduce using rule 78
	do             reduce using rule 78


State 116

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	Boolean -> Exp '>' Exp .                            (rule 77)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	'='            reduce using rule 77
	')'            reduce using rule 77
	'^'            shift, and enter state 75
	'&&'           reduce using rule 77
	'||'           reduce using rule 77
	then           reduce using rule 77
	do             reduce using rule 77


State 117

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	Boolean -> Exp '<' Exp .                            (rule 76)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	'='            reduce using rule 76
	')'            reduce using rule 76
	'^'            shift, and enter state 75
	'&&'           reduce using rule 76
	'||'           reduce using rule 76
	then           reduce using rule 76
	do             reduce using rule 76


State 118

	While -> while Boolean do Instruc .                 (rule 71)

	id             reduce using rule 71
	'{'            reduce using rule 71
	';'            reduce using rule 71
	read           reduce using rule 71
	write          reduce using rule 71
	define         reduce using rule 71
	begin          reduce using rule 71
	end            reduce using rule 71
	if             reduce using rule 71
	else           reduce using rule 71
	while          reduce using rule 71
	foreach        reduce using rule 71
	return         reduce using rule 71
	%eof           reduce using rule 71


State 119

	Boolean -> '(' Boolean ')' .                        (rule 87)

	'='            reduce using rule 87
	')'            reduce using rule 87
	'&&'           reduce using rule 87
	'||'           reduce using rule 87
	then           reduce using rule 87
	do             reduce using rule 87


State 120

	Unmatched -> if Boolean then Instruc .              (rule 20)

	id             reduce using rule 20
	'{'            reduce using rule 20
	';'            reduce using rule 20
	read           reduce using rule 20
	write          reduce using rule 20
	define         reduce using rule 20
	begin          reduce using rule 20
	end            reduce using rule 20
	if             reduce using rule 20
	else           reduce using rule 20
	while          reduce using rule 20
	foreach        reduce using rule 20
	return         reduce using rule 20
	%eof           reduce using rule 20


State 121

	Instruc -> Matched .                                (rule 10)
	Matched -> if Boolean then Matched . else Matched    (rule 12)
	Unmatched -> if Boolean then Matched . else Unmatched    (rule 21)

	id             reduce using rule 10
	'{'            reduce using rule 10
	';'            reduce using rule 10
	read           reduce using rule 10
	write          reduce using rule 10
	define         reduce using rule 10
	begin          reduce using rule 10
	end            reduce using rule 10
	if             reduce using rule 10
	else           shift, and enter state 159
			(reduce using rule 10)

	while          reduce using rule 10
	foreach        reduce using rule 10
	return         reduce using rule 10
	%eof           reduce using rule 10


State 122

	Boolean -> Boolean . '&&' Boolean                   (rule 84)
	Boolean -> Boolean . '||' Boolean                   (rule 85)
	Boolean -> Boolean '||' Boolean .                   (rule 85)
	Boolean -> Boolean . '=' Boolean                    (rule 86)

	'='            shift, and enter state 82
	')'            reduce using rule 85
	'&&'           shift, and enter state 83
	'||'           reduce using rule 85
	then           reduce using rule 85
	do             reduce using rule 85


State 123

	Boolean -> Boolean . '&&' Boolean                   (rule 84)
	Boolean -> Boolean '&&' Boolean .                   (rule 84)
	Boolean -> Boolean . '||' Boolean                   (rule 85)
	Boolean -> Boolean . '=' Boolean                    (rule 86)

	'='            shift, and enter state 82
	')'            reduce using rule 84
	'&&'           reduce using rule 84
	'||'           reduce using rule 84
	then           reduce using rule 84
	do             reduce using rule 84


State 124

	Boolean -> Boolean . '&&' Boolean                   (rule 84)
	Boolean -> Boolean . '||' Boolean                   (rule 85)
	Boolean -> Boolean . '=' Boolean                    (rule 86)
	Boolean -> Boolean '=' Boolean .                    (rule 86)

	'='            fail
	')'            reduce using rule 86
	'&&'           reduce using rule 86
	'||'           reduce using rule 86
	then           reduce using rule 86
	do             reduce using rule 86


State 125

	InsList -> InsList ';' . Instruc                    (rule 70)

	id             shift, and enter state 17
	'{'            shift, and enter state 18
	read           shift, and enter state 19
	write          shift, and enter state 20
	begin          shift, and enter state 22
	if             shift, and enter state 23
	while          shift, and enter state 24
	foreach        shift, and enter state 25
	return         shift, and enter state 26

	Instruc        goto state 158
	Matched        goto state 5
	Unmatched      goto state 6
	Asig           goto state 7
	Lval           goto state 8
	Access         goto state 9
	Mat            goto state 10
	InsBlock       goto state 11
	While          goto state 12
	ForEach        goto state 13
	Read           goto state 14
	Write          goto state 15
	Return         goto state 16

State 126

	InsBlock -> begin VarDec InsList end .              (rule 63)

	id             reduce using rule 63
	'{'            reduce using rule 63
	';'            reduce using rule 63
	read           reduce using rule 63
	write          reduce using rule 63
	define         reduce using rule 63
	begin          reduce using rule 63
	end            reduce using rule 63
	if             reduce using rule 63
	else           reduce using rule 63
	while          reduce using rule 63
	foreach        reduce using rule 63
	return         reduce using rule 63
	%eof           reduce using rule 63


State 127

	VarListDec -> IdList ':' . VarType                  (rule 65)

	tnum           shift, and enter state 155
	tvec           shift, and enter state 156
	tmat           shift, and enter state 157

	VarType        goto state 154

State 128

	IdList -> IdList ',' . id                           (rule 68)

	id             shift, and enter state 153


State 129

	VarListDec -> VarListDec ';' . IdList ':' VarType    (rule 66)

	id             shift, and enter state 79

	IdList         goto state 152

State 130

	FunDec -> FunDec define id '(' VarListFunc . ')' of type VarType as Instruc    (rule 3)
	VarListFunc -> VarListFunc . ',' VarListFunc        (rule 6)

	')'            shift, and enter state 150
	','            shift, and enter state 151


State 131

	VarListFunc -> id . ':' VarType                     (rule 5)

	':'            shift, and enter state 149


State 132

	FunDec -> FunDec define id '(' ')' . of type VarType as Instruc    (rule 4)

	of             shift, and enter state 148


State 133

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp '.' Exp .                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)

	id             reduce using rule 41
	'+'            reduce using rule 41
	'-'            reduce using rule 41
	'*'            reduce using rule 41
	'/'            reduce using rule 41
	'%'            reduce using rule 41
	'**'           shift, and enter state 73
	'.'            reduce using rule 41
	'<'            reduce using rule 41
	'>'            reduce using rule 41
	'<='           reduce using rule 41
	'>='           reduce using rule 41
	'='            reduce using rule 41
	'!='           reduce using rule 41
	']'            reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	')'            reduce using rule 41
	'^'            shift, and enter state 75
	':'            reduce using rule 41
	','            reduce using rule 41
	';'            reduce using rule 41
	'&&'           reduce using rule 41
	'||'           reduce using rule 41
	read           reduce using rule 41
	write          reduce using rule 41
	define         reduce using rule 41
	begin          reduce using rule 41
	end            reduce using rule 41
	if             reduce using rule 41
	else           reduce using rule 41
	then           reduce using rule 41
	while          reduce using rule 41
	do             reduce using rule 41
	foreach        reduce using rule 41
	return         reduce using rule 41
	%eof           reduce using rule 41


State 134

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp '**' Exp .                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)

	id             reduce using rule 40
	'+'            reduce using rule 40
	'-'            reduce using rule 40
	'*'            reduce using rule 40
	'/'            reduce using rule 40
	'%'            reduce using rule 40
	'**'           reduce using rule 40
	'.'            reduce using rule 40
	'<'            reduce using rule 40
	'>'            reduce using rule 40
	'<='           reduce using rule 40
	'>='           reduce using rule 40
	'='            reduce using rule 40
	'!='           reduce using rule 40
	']'            reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	')'            reduce using rule 40
	'^'            reduce using rule 40
	':'            reduce using rule 40
	','            reduce using rule 40
	';'            reduce using rule 40
	'&&'           reduce using rule 40
	'||'           reduce using rule 40
	read           reduce using rule 40
	write          reduce using rule 40
	define         reduce using rule 40
	begin          reduce using rule 40
	end            reduce using rule 40
	if             reduce using rule 40
	else           reduce using rule 40
	then           reduce using rule 40
	while          reduce using rule 40
	do             reduce using rule 40
	foreach        reduce using rule 40
	return         reduce using rule 40
	%eof           reduce using rule 40


State 135

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp '%' Exp .                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)

	id             reduce using rule 39
	'+'            reduce using rule 39
	'-'            reduce using rule 39
	'*'            reduce using rule 39
	'/'            reduce using rule 39
	'%'            reduce using rule 39
	'**'           shift, and enter state 73
	'.'            reduce using rule 39
	'<'            reduce using rule 39
	'>'            reduce using rule 39
	'<='           reduce using rule 39
	'>='           reduce using rule 39
	'='            reduce using rule 39
	'!='           reduce using rule 39
	']'            reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	')'            reduce using rule 39
	'^'            shift, and enter state 75
	':'            reduce using rule 39
	','            reduce using rule 39
	';'            reduce using rule 39
	'&&'           reduce using rule 39
	'||'           reduce using rule 39
	read           reduce using rule 39
	write          reduce using rule 39
	define         reduce using rule 39
	begin          reduce using rule 39
	end            reduce using rule 39
	if             reduce using rule 39
	else           reduce using rule 39
	then           reduce using rule 39
	while          reduce using rule 39
	do             reduce using rule 39
	foreach        reduce using rule 39
	return         reduce using rule 39
	%eof           reduce using rule 39


State 136

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp '/' Exp .                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)

	id             reduce using rule 38
	'+'            reduce using rule 38
	'-'            reduce using rule 38
	'*'            reduce using rule 38
	'/'            reduce using rule 38
	'%'            reduce using rule 38
	'**'           shift, and enter state 73
	'.'            reduce using rule 38
	'<'            reduce using rule 38
	'>'            reduce using rule 38
	'<='           reduce using rule 38
	'>='           reduce using rule 38
	'='            reduce using rule 38
	'!='           reduce using rule 38
	']'            reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	')'            reduce using rule 38
	'^'            shift, and enter state 75
	':'            reduce using rule 38
	','            reduce using rule 38
	';'            reduce using rule 38
	'&&'           reduce using rule 38
	'||'           reduce using rule 38
	read           reduce using rule 38
	write          reduce using rule 38
	define         reduce using rule 38
	begin          reduce using rule 38
	end            reduce using rule 38
	if             reduce using rule 38
	else           reduce using rule 38
	then           reduce using rule 38
	while          reduce using rule 38
	do             reduce using rule 38
	foreach        reduce using rule 38
	return         reduce using rule 38
	%eof           reduce using rule 38


State 137

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp '*' Exp .                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)

	id             reduce using rule 37
	'+'            reduce using rule 37
	'-'            reduce using rule 37
	'*'            reduce using rule 37
	'/'            reduce using rule 37
	'%'            reduce using rule 37
	'**'           shift, and enter state 73
	'.'            reduce using rule 37
	'<'            reduce using rule 37
	'>'            reduce using rule 37
	'<='           reduce using rule 37
	'>='           reduce using rule 37
	'='            reduce using rule 37
	'!='           reduce using rule 37
	']'            reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	')'            reduce using rule 37
	'^'            shift, and enter state 75
	':'            reduce using rule 37
	','            reduce using rule 37
	';'            reduce using rule 37
	'&&'           reduce using rule 37
	'||'           reduce using rule 37
	read           reduce using rule 37
	write          reduce using rule 37
	define         reduce using rule 37
	begin          reduce using rule 37
	end            reduce using rule 37
	if             reduce using rule 37
	else           reduce using rule 37
	then           reduce using rule 37
	while          reduce using rule 37
	do             reduce using rule 37
	foreach        reduce using rule 37
	return         reduce using rule 37
	%eof           reduce using rule 37


State 138

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp '-' Exp .                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)

	id             reduce using rule 36
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	'<'            reduce using rule 36
	'>'            reduce using rule 36
	'<='           reduce using rule 36
	'>='           reduce using rule 36
	'='            reduce using rule 36
	'!='           reduce using rule 36
	']'            reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	')'            reduce using rule 36
	'^'            shift, and enter state 75
	':'            reduce using rule 36
	','            reduce using rule 36
	';'            reduce using rule 36
	'&&'           reduce using rule 36
	'||'           reduce using rule 36
	read           reduce using rule 36
	write          reduce using rule 36
	define         reduce using rule 36
	begin          reduce using rule 36
	end            reduce using rule 36
	if             reduce using rule 36
	else           reduce using rule 36
	then           reduce using rule 36
	while          reduce using rule 36
	do             reduce using rule 36
	foreach        reduce using rule 36
	return         reduce using rule 36
	%eof           reduce using rule 36


State 139

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp '+' Exp .                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)

	id             reduce using rule 35
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	'<'            reduce using rule 35
	'>'            reduce using rule 35
	'<='           reduce using rule 35
	'>='           reduce using rule 35
	'='            reduce using rule 35
	'!='           reduce using rule 35
	']'            reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	')'            reduce using rule 35
	'^'            shift, and enter state 75
	':'            reduce using rule 35
	','            reduce using rule 35
	';'            reduce using rule 35
	'&&'           reduce using rule 35
	'||'           reduce using rule 35
	read           reduce using rule 35
	write          reduce using rule 35
	define         reduce using rule 35
	begin          reduce using rule 35
	end            reduce using rule 35
	if             reduce using rule 35
	else           reduce using rule 35
	then           reduce using rule 35
	while          reduce using rule 35
	do             reduce using rule 35
	foreach        reduce using rule 35
	return         reduce using rule 35
	%eof           reduce using rule 35


State 140

	ElemList -> ElemList ';' ExpList .                  (rule 51)
	ExpList -> ExpList . ',' Exp                        (rule 53)

	'}'            reduce using rule 51
	','            shift, and enter state 65
	';'            reduce using rule 51


State 141

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	ExpList -> ExpList ',' Exp .                        (rule 53)

	id             reduce using rule 53
	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	'{'            reduce using rule 53
	'}'            reduce using rule 53
	')'            reduce using rule 53
	'^'            shift, and enter state 75
	','            reduce using rule 53
	';'            reduce using rule 53
	read           reduce using rule 53
	write          reduce using rule 53
	define         reduce using rule 53
	begin          reduce using rule 53
	end            reduce using rule 53
	if             reduce using rule 53
	else           reduce using rule 53
	while          reduce using rule 53
	foreach        reduce using rule 53
	return         reduce using rule 53
	%eof           reduce using rule 53


State 142

	Lval -> Access '[' Exp ']' .                        (rule 24)

	id             reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            reduce using rule 24
	'/'            reduce using rule 24
	'%'            reduce using rule 24
	'**'           reduce using rule 24
	'.'            reduce using rule 24
	'<'            reduce using rule 24
	'>'            reduce using rule 24
	'<='           reduce using rule 24
	'>='           reduce using rule 24
	'='            reduce using rule 24
	'!='           reduce using rule 24
	':='           reduce using rule 24
	']'            reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	')'            reduce using rule 24
	'^'            reduce using rule 24
	':'            reduce using rule 24
	','            reduce using rule 24
	';'            reduce using rule 24
	'&&'           reduce using rule 24
	'||'           reduce using rule 24
	read           reduce using rule 24
	write          reduce using rule 24
	define         reduce using rule 24
	begin          reduce using rule 24
	end            reduce using rule 24
	if             reduce using rule 24
	else           reduce using rule 24
	then           reduce using rule 24
	while          reduce using rule 24
	do             reduce using rule 24
	foreach        reduce using rule 24
	return         reduce using rule 24
	%eof           reduce using rule 24


State 143

	Lval -> Access '[' Exp ',' . Exp ']'                (rule 25)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 147
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 144

	Lval -> Access '[' Ind ':' . Ind ']'                (rule 26)
	Lval -> Access '[' Ind ':' . Ind ',' Ind ':' Ind ']'    (rule 27)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	']'            reduce using rule 30
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	','            reduce using rule 30
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Ind            goto state 145
	Exp            goto state 146
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 145

	Lval -> Access '[' Ind ':' Ind . ']'                (rule 26)
	Lval -> Access '[' Ind ':' Ind . ',' Ind ':' Ind ']'    (rule 27)

	']'            shift, and enter state 176
	','            shift, and enter state 177


State 146

	Ind -> Exp .                                        (rule 31)
	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	']'            reduce using rule 31
	'^'            shift, and enter state 75
	':'            reduce using rule 31
	','            reduce using rule 31


State 147

	Lval -> Access '[' Exp ',' Exp . ']'                (rule 25)
	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	']'            shift, and enter state 175
	'^'            shift, and enter state 75


State 148

	FunDec -> FunDec define id '(' ')' of . type VarType as Instruc    (rule 4)

	type           shift, and enter state 174


State 149

	VarListFunc -> id ':' . VarType                     (rule 5)

	tnum           shift, and enter state 155
	tvec           shift, and enter state 156
	tmat           shift, and enter state 157

	VarType        goto state 173

State 150

	FunDec -> FunDec define id '(' VarListFunc ')' . of type VarType as Instruc    (rule 3)

	of             shift, and enter state 172


State 151

	VarListFunc -> VarListFunc ',' . VarListFunc        (rule 6)

	id             shift, and enter state 131

	VarListFunc    goto state 171

State 152

	VarListDec -> VarListDec ';' IdList . ':' VarType    (rule 66)
	IdList -> IdList . ',' id                           (rule 68)

	':'            shift, and enter state 170
	','            shift, and enter state 128


State 153

	IdList -> IdList ',' id .                           (rule 68)

	':'            reduce using rule 68
	','            reduce using rule 68


State 154

	VarListDec -> IdList ':' VarType .                  (rule 65)

	id             reduce using rule 65
	'{'            reduce using rule 65
	';'            reduce using rule 65
	read           reduce using rule 65
	write          reduce using rule 65
	begin          reduce using rule 65
	if             reduce using rule 65
	while          reduce using rule 65
	foreach        reduce using rule 65
	return         reduce using rule 65


State 155

	VarType -> tnum .                                   (rule 7)

	id             reduce using rule 7
	'{'            reduce using rule 7
	')'            reduce using rule 7
	','            reduce using rule 7
	';'            reduce using rule 7
	read           reduce using rule 7
	write          reduce using rule 7
	as             reduce using rule 7
	begin          reduce using rule 7
	if             reduce using rule 7
	while          reduce using rule 7
	foreach        reduce using rule 7
	return         reduce using rule 7


State 156

	VarType -> tvec .                                   (rule 8)

	id             reduce using rule 8
	'{'            reduce using rule 8
	')'            reduce using rule 8
	','            reduce using rule 8
	';'            reduce using rule 8
	read           reduce using rule 8
	write          reduce using rule 8
	as             reduce using rule 8
	begin          reduce using rule 8
	if             reduce using rule 8
	while          reduce using rule 8
	foreach        reduce using rule 8
	return         reduce using rule 8


State 157

	VarType -> tmat .                                   (rule 9)

	id             reduce using rule 9
	'{'            reduce using rule 9
	')'            reduce using rule 9
	','            reduce using rule 9
	';'            reduce using rule 9
	read           reduce using rule 9
	write          reduce using rule 9
	as             reduce using rule 9
	begin          reduce using rule 9
	if             reduce using rule 9
	while          reduce using rule 9
	foreach        reduce using rule 9
	return         reduce using rule 9


State 158

	InsList -> InsList ';' Instruc .                    (rule 70)

	';'            reduce using rule 70
	end            reduce using rule 70


State 159

	Matched -> if Boolean then Matched else . Matched    (rule 12)
	Unmatched -> if Boolean then Matched else . Unmatched    (rule 21)

	id             shift, and enter state 17
	'{'            shift, and enter state 18
	read           shift, and enter state 19
	write          shift, and enter state 20
	begin          shift, and enter state 22
	if             shift, and enter state 23
	while          shift, and enter state 24
	foreach        shift, and enter state 25
	return         shift, and enter state 26

	Matched        goto state 168
	Unmatched      goto state 169
	Asig           goto state 7
	Lval           goto state 8
	Access         goto state 9
	Mat            goto state 10
	InsBlock       goto state 11
	While          goto state 12
	ForEach        goto state 13
	Read           goto state 14
	Write          goto state 15
	Return         goto state 16

State 160

	ForEach -> foreach id in Exp do . Instruc           (rule 72)

	id             shift, and enter state 17
	'{'            shift, and enter state 18
	read           shift, and enter state 19
	write          shift, and enter state 20
	begin          shift, and enter state 22
	if             shift, and enter state 23
	while          shift, and enter state 24
	foreach        shift, and enter state 25
	return         shift, and enter state 26

	Instruc        goto state 167
	Matched        goto state 5
	Unmatched      goto state 6
	Asig           goto state 7
	Lval           goto state 8
	Access         goto state 9
	Mat            goto state 10
	InsBlock       goto state 11
	While          goto state 12
	ForEach        goto state 13
	Read           goto state 14
	Write          goto state 15
	Return         goto state 16

State 161

	Eye -> eye '(' Exp ')' .                            (rule 62)

	id             reduce using rule 62
	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'*'            reduce using rule 62
	'/'            reduce using rule 62
	'%'            reduce using rule 62
	'**'           reduce using rule 62
	'.'            reduce using rule 62
	'<'            reduce using rule 62
	'>'            reduce using rule 62
	'<='           reduce using rule 62
	'>='           reduce using rule 62
	'='            reduce using rule 62
	'!='           reduce using rule 62
	']'            reduce using rule 62
	'{'            reduce using rule 62
	'}'            reduce using rule 62
	')'            reduce using rule 62
	'^'            reduce using rule 62
	':'            reduce using rule 62
	','            reduce using rule 62
	';'            reduce using rule 62
	'&&'           reduce using rule 62
	'||'           reduce using rule 62
	read           reduce using rule 62
	write          reduce using rule 62
	define         reduce using rule 62
	begin          reduce using rule 62
	end            reduce using rule 62
	if             reduce using rule 62
	else           reduce using rule 62
	then           reduce using rule 62
	while          reduce using rule 62
	do             reduce using rule 62
	foreach        reduce using rule 62
	return         reduce using rule 62
	%eof           reduce using rule 62


State 162

	Range -> range '(' Exp ')' .                        (rule 61)

	id             reduce using rule 61
	'+'            reduce using rule 61
	'-'            reduce using rule 61
	'*'            reduce using rule 61
	'/'            reduce using rule 61
	'%'            reduce using rule 61
	'**'           reduce using rule 61
	'.'            reduce using rule 61
	'<'            reduce using rule 61
	'>'            reduce using rule 61
	'<='           reduce using rule 61
	'>='           reduce using rule 61
	'='            reduce using rule 61
	'!='           reduce using rule 61
	']'            reduce using rule 61
	'{'            reduce using rule 61
	'}'            reduce using rule 61
	')'            reduce using rule 61
	'^'            reduce using rule 61
	':'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61
	'&&'           reduce using rule 61
	'||'           reduce using rule 61
	read           reduce using rule 61
	write          reduce using rule 61
	define         reduce using rule 61
	begin          reduce using rule 61
	end            reduce using rule 61
	if             reduce using rule 61
	else           reduce using rule 61
	then           reduce using rule 61
	while          reduce using rule 61
	do             reduce using rule 61
	foreach        reduce using rule 61
	return         reduce using rule 61
	%eof           reduce using rule 61


State 163

	Zeroes -> zeroes '(' Exp ')' .                      (rule 60)

	id             reduce using rule 60
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	'%'            reduce using rule 60
	'**'           reduce using rule 60
	'.'            reduce using rule 60
	'<'            reduce using rule 60
	'>'            reduce using rule 60
	'<='           reduce using rule 60
	'>='           reduce using rule 60
	'='            reduce using rule 60
	'!='           reduce using rule 60
	']'            reduce using rule 60
	'{'            reduce using rule 60
	'}'            reduce using rule 60
	')'            reduce using rule 60
	'^'            reduce using rule 60
	':'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	'&&'           reduce using rule 60
	'||'           reduce using rule 60
	read           reduce using rule 60
	write          reduce using rule 60
	define         reduce using rule 60
	begin          reduce using rule 60
	end            reduce using rule 60
	if             reduce using rule 60
	else           reduce using rule 60
	then           reduce using rule 60
	while          reduce using rule 60
	do             reduce using rule 60
	foreach        reduce using rule 60
	return         reduce using rule 60
	%eof           reduce using rule 60


State 164

	Zeroes -> zeroes '(' Exp ',' . Exp ')'              (rule 59)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Exp            goto state 166
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 165

	FunCall -> id '(' ExpList ')' .                     (rule 54)

	id             reduce using rule 54
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'%'            reduce using rule 54
	'**'           reduce using rule 54
	'.'            reduce using rule 54
	'<'            reduce using rule 54
	'>'            reduce using rule 54
	'<='           reduce using rule 54
	'>='           reduce using rule 54
	'='            reduce using rule 54
	'!='           reduce using rule 54
	']'            reduce using rule 54
	'{'            reduce using rule 54
	'}'            reduce using rule 54
	')'            reduce using rule 54
	'^'            reduce using rule 54
	':'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54
	'&&'           reduce using rule 54
	'||'           reduce using rule 54
	read           reduce using rule 54
	write          reduce using rule 54
	define         reduce using rule 54
	begin          reduce using rule 54
	end            reduce using rule 54
	if             reduce using rule 54
	else           reduce using rule 54
	then           reduce using rule 54
	while          reduce using rule 54
	do             reduce using rule 54
	foreach        reduce using rule 54
	return         reduce using rule 54
	%eof           reduce using rule 54


State 166

	Exp -> Exp . '+' Exp                                (rule 35)
	Exp -> Exp . '-' Exp                                (rule 36)
	Exp -> Exp . '*' Exp                                (rule 37)
	Exp -> Exp . '/' Exp                                (rule 38)
	Exp -> Exp . '%' Exp                                (rule 39)
	Exp -> Exp . '**' Exp                               (rule 40)
	Exp -> Exp . '.' Exp                                (rule 41)
	Exp -> Exp . '^'                                    (rule 44)
	Zeroes -> zeroes '(' Exp ',' Exp . ')'              (rule 59)

	'+'            shift, and enter state 68
	'-'            shift, and enter state 69
	'*'            shift, and enter state 70
	'/'            shift, and enter state 71
	'%'            shift, and enter state 72
	'**'           shift, and enter state 73
	'.'            shift, and enter state 74
	')'            shift, and enter state 182
	'^'            shift, and enter state 75


State 167

	ForEach -> foreach id in Exp do Instruc .           (rule 72)

	id             reduce using rule 72
	'{'            reduce using rule 72
	';'            reduce using rule 72
	read           reduce using rule 72
	write          reduce using rule 72
	define         reduce using rule 72
	begin          reduce using rule 72
	end            reduce using rule 72
	if             reduce using rule 72
	else           reduce using rule 72
	while          reduce using rule 72
	foreach        reduce using rule 72
	return         reduce using rule 72
	%eof           reduce using rule 72


State 168

	Matched -> if Boolean then Matched else Matched .    (rule 12)

	id             reduce using rule 12
	'{'            reduce using rule 12
	';'            reduce using rule 12
	read           reduce using rule 12
	write          reduce using rule 12
	define         reduce using rule 12
	begin          reduce using rule 12
	end            reduce using rule 12
	if             reduce using rule 12
	else           reduce using rule 12
	while          reduce using rule 12
	foreach        reduce using rule 12
	return         reduce using rule 12
	%eof           reduce using rule 12


State 169

	Unmatched -> if Boolean then Matched else Unmatched .    (rule 21)

	id             reduce using rule 21
	'{'            reduce using rule 21
	';'            reduce using rule 21
	read           reduce using rule 21
	write          reduce using rule 21
	define         reduce using rule 21
	begin          reduce using rule 21
	end            reduce using rule 21
	if             reduce using rule 21
	else           reduce using rule 21
	while          reduce using rule 21
	foreach        reduce using rule 21
	return         reduce using rule 21
	%eof           reduce using rule 21


State 170

	VarListDec -> VarListDec ';' IdList ':' . VarType    (rule 66)

	tnum           shift, and enter state 155
	tvec           shift, and enter state 156
	tmat           shift, and enter state 157

	VarType        goto state 181

State 171

	VarListFunc -> VarListFunc . ',' VarListFunc        (rule 6)
	VarListFunc -> VarListFunc ',' VarListFunc .        (rule 6)

	')'            reduce using rule 6
	','            shift, and enter state 151


State 172

	FunDec -> FunDec define id '(' VarListFunc ')' of . type VarType as Instruc    (rule 3)

	type           shift, and enter state 180


State 173

	VarListFunc -> id ':' VarType .                     (rule 5)

	')'            reduce using rule 5
	','            reduce using rule 5


State 174

	FunDec -> FunDec define id '(' ')' of type . VarType as Instruc    (rule 4)

	tnum           shift, and enter state 155
	tvec           shift, and enter state 156
	tmat           shift, and enter state 157

	VarType        goto state 179

State 175

	Lval -> Access '[' Exp ',' Exp ']' .                (rule 25)

	id             reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25
	'%'            reduce using rule 25
	'**'           reduce using rule 25
	'.'            reduce using rule 25
	'<'            reduce using rule 25
	'>'            reduce using rule 25
	'<='           reduce using rule 25
	'>='           reduce using rule 25
	'='            reduce using rule 25
	'!='           reduce using rule 25
	':='           reduce using rule 25
	']'            reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	')'            reduce using rule 25
	'^'            reduce using rule 25
	':'            reduce using rule 25
	','            reduce using rule 25
	';'            reduce using rule 25
	'&&'           reduce using rule 25
	'||'           reduce using rule 25
	read           reduce using rule 25
	write          reduce using rule 25
	define         reduce using rule 25
	begin          reduce using rule 25
	end            reduce using rule 25
	if             reduce using rule 25
	else           reduce using rule 25
	then           reduce using rule 25
	while          reduce using rule 25
	do             reduce using rule 25
	foreach        reduce using rule 25
	return         reduce using rule 25
	%eof           reduce using rule 25


State 176

	Lval -> Access '[' Ind ':' Ind ']' .                (rule 26)

	id             reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	'%'            reduce using rule 26
	'**'           reduce using rule 26
	'.'            reduce using rule 26
	'<'            reduce using rule 26
	'>'            reduce using rule 26
	'<='           reduce using rule 26
	'>='           reduce using rule 26
	'='            reduce using rule 26
	'!='           reduce using rule 26
	':='           reduce using rule 26
	']'            reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	')'            reduce using rule 26
	'^'            reduce using rule 26
	':'            reduce using rule 26
	','            reduce using rule 26
	';'            reduce using rule 26
	'&&'           reduce using rule 26
	'||'           reduce using rule 26
	read           reduce using rule 26
	write          reduce using rule 26
	define         reduce using rule 26
	begin          reduce using rule 26
	end            reduce using rule 26
	if             reduce using rule 26
	else           reduce using rule 26
	then           reduce using rule 26
	while          reduce using rule 26
	do             reduce using rule 26
	foreach        reduce using rule 26
	return         reduce using rule 26
	%eof           reduce using rule 26


State 177

	Lval -> Access '[' Ind ':' Ind ',' . Ind ':' Ind ']'    (rule 27)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	':'            reduce using rule 30
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Ind            goto state 178
	Exp            goto state 146
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 178

	Lval -> Access '[' Ind ':' Ind ',' Ind . ':' Ind ']'    (rule 27)

	':'            shift, and enter state 185


State 179

	FunDec -> FunDec define id '(' ')' of type VarType . as Instruc    (rule 4)

	as             shift, and enter state 184


State 180

	FunDec -> FunDec define id '(' VarListFunc ')' of type . VarType as Instruc    (rule 3)

	tnum           shift, and enter state 155
	tvec           shift, and enter state 156
	tmat           shift, and enter state 157

	VarType        goto state 183

State 181

	VarListDec -> VarListDec ';' IdList ':' VarType .    (rule 66)

	id             reduce using rule 66
	'{'            reduce using rule 66
	';'            reduce using rule 66
	read           reduce using rule 66
	write          reduce using rule 66
	begin          reduce using rule 66
	if             reduce using rule 66
	while          reduce using rule 66
	foreach        reduce using rule 66
	return         reduce using rule 66


State 182

	Zeroes -> zeroes '(' Exp ',' Exp ')' .              (rule 59)

	id             reduce using rule 59
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'%'            reduce using rule 59
	'**'           reduce using rule 59
	'.'            reduce using rule 59
	'<'            reduce using rule 59
	'>'            reduce using rule 59
	'<='           reduce using rule 59
	'>='           reduce using rule 59
	'='            reduce using rule 59
	'!='           reduce using rule 59
	']'            reduce using rule 59
	'{'            reduce using rule 59
	'}'            reduce using rule 59
	')'            reduce using rule 59
	'^'            reduce using rule 59
	':'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	'&&'           reduce using rule 59
	'||'           reduce using rule 59
	read           reduce using rule 59
	write          reduce using rule 59
	define         reduce using rule 59
	begin          reduce using rule 59
	end            reduce using rule 59
	if             reduce using rule 59
	else           reduce using rule 59
	then           reduce using rule 59
	while          reduce using rule 59
	do             reduce using rule 59
	foreach        reduce using rule 59
	return         reduce using rule 59
	%eof           reduce using rule 59


State 183

	FunDec -> FunDec define id '(' VarListFunc ')' of type VarType . as Instruc    (rule 3)

	as             shift, and enter state 188


State 184

	FunDec -> FunDec define id '(' ')' of type VarType as . Instruc    (rule 4)

	id             shift, and enter state 17
	'{'            shift, and enter state 18
	read           shift, and enter state 19
	write          shift, and enter state 20
	begin          shift, and enter state 22
	if             shift, and enter state 23
	while          shift, and enter state 24
	foreach        shift, and enter state 25
	return         shift, and enter state 26

	Instruc        goto state 187
	Matched        goto state 5
	Unmatched      goto state 6
	Asig           goto state 7
	Lval           goto state 8
	Access         goto state 9
	Mat            goto state 10
	InsBlock       goto state 11
	While          goto state 12
	ForEach        goto state 13
	Read           goto state 14
	Write          goto state 15
	Return         goto state 16

State 185

	Lval -> Access '[' Ind ':' Ind ',' Ind ':' . Ind ']'    (rule 27)

	string         shift, and enter state 34
	id             shift, and enter state 35
	num            shift, and enter state 36
	'-'            shift, and enter state 37
	']'            reduce using rule 30
	'{'            shift, and enter state 18
	'('            shift, and enter state 38
	'$'            shift, and enter state 39
	'@'            shift, and enter state 40
	zeroes         shift, and enter state 41
	range          shift, and enter state 42
	eye            shift, and enter state 43

	Lval           goto state 27
	Access         goto state 9
	Ind            goto state 186
	Exp            goto state 146
	Mat            goto state 10
	FunCall        goto state 29
	FunEmb         goto state 30
	Zeroes         goto state 31
	Range          goto state 32
	Eye            goto state 33

State 186

	Lval -> Access '[' Ind ':' Ind ',' Ind ':' Ind . ']'    (rule 27)

	']'            shift, and enter state 190


State 187

	FunDec -> FunDec define id '(' ')' of type VarType as Instruc .    (rule 4)

	id             reduce using rule 4
	'{'            reduce using rule 4
	read           reduce using rule 4
	write          reduce using rule 4
	define         reduce using rule 4
	begin          reduce using rule 4
	if             reduce using rule 4
	while          reduce using rule 4
	foreach        reduce using rule 4
	return         reduce using rule 4


State 188

	FunDec -> FunDec define id '(' VarListFunc ')' of type VarType as . Instruc    (rule 3)

	id             shift, and enter state 17
	'{'            shift, and enter state 18
	read           shift, and enter state 19
	write          shift, and enter state 20
	begin          shift, and enter state 22
	if             shift, and enter state 23
	while          shift, and enter state 24
	foreach        shift, and enter state 25
	return         shift, and enter state 26

	Instruc        goto state 189
	Matched        goto state 5
	Unmatched      goto state 6
	Asig           goto state 7
	Lval           goto state 8
	Access         goto state 9
	Mat            goto state 10
	InsBlock       goto state 11
	While          goto state 12
	ForEach        goto state 13
	Read           goto state 14
	Write          goto state 15
	Return         goto state 16

State 189

	FunDec -> FunDec define id '(' VarListFunc ')' of type VarType as Instruc .    (rule 3)

	id             reduce using rule 3
	'{'            reduce using rule 3
	read           reduce using rule 3
	write          reduce using rule 3
	define         reduce using rule 3
	begin          reduce using rule 3
	if             reduce using rule 3
	while          reduce using rule 3
	foreach        reduce using rule 3
	return         reduce using rule 3


State 190

	Lval -> Access '[' Ind ':' Ind ',' Ind ':' Ind ']' .    (rule 27)

	id             reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	'%'            reduce using rule 27
	'**'           reduce using rule 27
	'.'            reduce using rule 27
	'<'            reduce using rule 27
	'>'            reduce using rule 27
	'<='           reduce using rule 27
	'>='           reduce using rule 27
	'='            reduce using rule 27
	'!='           reduce using rule 27
	':='           reduce using rule 27
	']'            reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	')'            reduce using rule 27
	'^'            reduce using rule 27
	':'            reduce using rule 27
	','            reduce using rule 27
	';'            reduce using rule 27
	'&&'           reduce using rule 27
	'||'           reduce using rule 27
	read           reduce using rule 27
	write          reduce using rule 27
	define         reduce using rule 27
	begin          reduce using rule 27
	end            reduce using rule 27
	if             reduce using rule 27
	else           reduce using rule 27
	then           reduce using rule 27
	while          reduce using rule 27
	do             reduce using rule 27
	foreach        reduce using rule 27
	return         reduce using rule 27
	%eof           reduce using rule 27


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 89
Number of terminals: 57
Number of non-terminals: 32
Number of states: 191
