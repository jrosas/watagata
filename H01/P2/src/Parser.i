-----------------------------------------------------------------------------
Info file generated by Happy Version 1.18.4 from Parser.y
-----------------------------------------------------------------------------

state 98 contains 2 reduce/reduce conflicts.
state 100 contains 1 shift/reduce conflicts.
state 124 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> Prog                              (0)
	Prog -> FunDec Instruc                             (1)
	FunDec ->                                          (2)
	FunDec -> FunDec define id '(' VarListFunc ')' of type VarType as Instruc   (3)
	FunDec -> FunDec define id '(' ')' of type VarType as Instruc   (4)
	VarListFunc -> id ':' VarType                      (5)
	VarListFunc -> VarListFunc ',' VarListFunc         (6)
	VarType -> tnum                                    (7)
	VarType -> tvec                                    (8)
	VarType -> tmat                                    (9)
	Instruc -> Asig                                    (10)
	Instruc -> InsBlock                                (11)
	Instruc -> CondSelect                              (12)
	Instruc -> While                                   (13)
	Instruc -> ForEach                                 (14)
	Instruc -> Read                                    (15)
	Instruc -> Write                                   (16)
	Instruc -> Return                                  (17)
	Asig -> Lval ':=' Exp                              (18)
	Lval -> id                                         (19)
	Lval -> id '[' Exp ']'                             (20)
	Lval -> id '[' Exp ',' Exp ']'                     (21)
	Lval -> id '[' Ind ':' Ind ']'                     (22)
	Lval -> id '[' Ind ':' Ind ',' Ind ':' Ind ']'     (23)
	Ind ->                                             (24)
	Ind -> Exp                                         (25)
	Exp -> num                                         (26)
	Exp -> string                                      (27)
	Exp -> Mat                                         (28)
	Exp -> '(' Exp ')'                                 (29)
	Exp -> Exp '+' Exp                                 (30)
	Exp -> Exp '-' Exp                                 (31)
	Exp -> Exp '*' Exp                                 (32)
	Exp -> Exp '/' Exp                                 (33)
	Exp -> Exp '%' Exp                                 (34)
	Exp -> Exp '**' Exp                                (35)
	Exp -> Exp '.' Exp                                 (36)
	Exp -> Lval                                        (37)
	Exp -> '-' Exp                                     (38)
	Exp -> '^' Exp                                     (39)
	Exp -> '$' Exp                                     (40)
	Exp -> '@' Exp                                     (41)
	Exp -> FunCall                                     (42)
	Exp -> FunEmb                                      (43)
	Mat -> '{' MatList '}'                             (44)
	Mat -> '{' ExpList '}'                             (45)
	Mat -> '{' ElemList '}'                            (46)
	MatList -> Mat                                     (47)
	MatList -> MatList ';' Mat                         (48)
	ExpList -> Exp                                     (49)
	ExpList -> ExpList ',' Exp                         (50)
	ElemList -> ExpList                                (51)
	ElemList -> ElemList ';' ExpList                   (52)
	FunCall -> id '(' ExpList ')'                      (53)
	FunCall -> id '(' ')'                              (54)
	FunEmb -> Zeroes                                   (55)
	FunEmb -> Range                                    (56)
	FunEmb -> Eye                                      (57)
	Zeroes -> zeroes '(' Exp ',' Exp ')'               (58)
	Zeroes -> zeroes '(' Exp ')'                       (59)
	Range -> range '(' Exp ')'                         (60)
	Eye -> eye '(' Exp ')'                             (61)
	InsBlock -> begin VarDec InsList end               (62)
	VarDec -> vars VarListDec                          (63)
	VarListDec -> IdList ':' VarType                   (64)
	VarListDec -> VarListDec ';' IdList ':' VarType    (65)
	IdList -> id                                       (66)
	IdList -> IdList ',' id                            (67)
	InsList -> Instruc                                 (68)
	InsList -> InsList ';' Instruc                     (69)
	CondSelect -> if Boolean then Instruc              (70)
	CondSelect -> if Boolean then Instruc else Instruc   (71)
	While -> while Boolean do Instruc                  (72)
	ForEach -> foreach id in Exp do Instruc            (73)
	Read -> read Exp                                   (74)
	Write -> write ExpList                             (75)
	Return -> return Exp                               (76)
	Boolean -> Exp '<' Exp                             (77)
	Boolean -> Exp '>' Exp                             (78)
	Boolean -> Exp '<=' Exp                            (79)
	Boolean -> Exp '>=' Exp                            (80)
	Boolean -> Exp '=' Exp                             (81)
	Boolean -> Exp '!=' Exp                            (82)
	Boolean -> true                                    (83)
	Boolean -> false                                   (84)
	Boolean -> Boolean '&&' Boolean                    (85)
	Boolean -> Boolean '||' Boolean                    (86)
	Boolean -> Boolean '=' Boolean                     (87)
	Boolean -> '(' Boolean ')'                         (88)
	Boolean -> '!' Boolean                             (89)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	tnum           { TkTNum _ }
	tvec           { TkTVec _ }
	tmat           { TkTMat _ }
	true           { TkTrue _ }
	false          { TkFalse _ }
	string         { TkString _ $$ }
	id             { TkId _ $$ }
	num            { TkNum _ $$ }
	'+'            { TkPlus _ }
	'-'            { TkMinus _ }
	'*'            { TkTimes _ }
	'/'            { TkDiv _ }
	'%'            { TkMod _ }
	'**'           { TkExp _ }
	'.'            { TkDot _ }
	'<'            { TkLess _ }
	'>'            { TkGreat _ }
	'<='           { TkLET _ }
	'>='           { TkGET _ }
	'='            { TkEqual _ }
	'!='           { TkNEqual _ }
	':='           { TkAssign _ }
	'['            { TkLSB _ }
	']'            { TkRSB _ }
	'{'            { TkLCB _ }
	'}'            { TkRCB _ }
	'('            { TkLP  _ }
	')'            { TkRP  _ }
	'$'            { TkDS _ }
	'@'            { TkAt _ }
	'^'            { TkCircum _ }
	':'            { TkColon _ }
	','            { TkComma _ }
	';'            { TkSC _ }
	'&&'           { TkAnd _ }
	'||'           { TkOr _ }
	'!'            { TkNot _ }
	zeroes         { TkFZeroes _ }
	range          { TkFRange _ }
	eye            { TkFEye _ }
	read           { TkRead _ }
	write          { TkWrite _ }
	define         { TkDef _ }
	of             { TkOf _ }
	type           { TkType _ }
	as             { TkAs _ }
	begin          { TkBegin _ }
	end            { TkEnd _ }
	vars           { TkVar _ }
	if             { TkIf _ }
	else           { TkElse _ }
	then           { TkThen _ }
	while          { TkWhile _ }
	do             { TkDo _ }
	foreach        { TkFore _ }
	in             { TkIn _ }
	return         { TkReturn _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	Prog            rule  1
	FunDec          rules 2, 3, 4
	VarListFunc     rules 5, 6
	VarType         rules 7, 8, 9
	Instruc         rules 10, 11, 12, 13, 14, 15, 16, 17
	Asig            rule  18
	Lval            rules 19, 20, 21, 22, 23
	Ind             rules 24, 25
	Exp             rules 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43
	Mat             rules 44, 45, 46
	MatList         rules 47, 48
	ExpList         rules 49, 50
	ElemList        rules 51, 52
	FunCall         rules 53, 54
	FunEmb          rules 55, 56, 57
	Zeroes          rules 58, 59
	Range           rule  60
	Eye             rule  61
	InsBlock        rule  62
	VarDec          rule  63
	VarListDec      rules 64, 65
	IdList          rules 66, 67
	InsList         rules 68, 69
	CondSelect      rules 70, 71
	While           rule  72
	ForEach         rule  73
	Read            rule  74
	Write           rule  75
	Return          rule  76
	Boolean         rules 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	id             reduce using rule 2
	read           reduce using rule 2
	write          reduce using rule 2
	define         reduce using rule 2
	begin          reduce using rule 2
	if             reduce using rule 2
	while          reduce using rule 2
	foreach        reduce using rule 2
	return         reduce using rule 2

	Prog           goto state 3
	FunDec         goto state 2

State 1



	FunDec         goto state 2

State 2

	Prog -> FunDec . Instruc                            (rule 1)
	FunDec -> FunDec . define id '(' VarListFunc ')' of type VarType as Instruc    (rule 3)
	FunDec -> FunDec . define id '(' ')' of type VarType as Instruc    (rule 4)

	id             shift, and enter state 14
	read           shift, and enter state 15
	write          shift, and enter state 16
	define         shift, and enter state 17
	begin          shift, and enter state 18
	if             shift, and enter state 19
	while          shift, and enter state 20
	foreach        shift, and enter state 21
	return         shift, and enter state 22

	Instruc        goto state 4
	Asig           goto state 5
	Lval           goto state 6
	InsBlock       goto state 7
	CondSelect     goto state 8
	While          goto state 9
	ForEach        goto state 10
	Read           goto state 11
	Write          goto state 12
	Return         goto state 13

State 3

	%start_parser -> Prog .                             (rule 0)

	%eof           accept


State 4

	Prog -> FunDec Instruc .                            (rule 1)

	%eof           reduce using rule 1


State 5

	Instruc -> Asig .                                   (rule 10)

	id             reduce using rule 10
	';'            reduce using rule 10
	read           reduce using rule 10
	write          reduce using rule 10
	define         reduce using rule 10
	begin          reduce using rule 10
	end            reduce using rule 10
	if             reduce using rule 10
	else           reduce using rule 10
	while          reduce using rule 10
	foreach        reduce using rule 10
	return         reduce using rule 10
	%eof           reduce using rule 10


State 6

	Asig -> Lval . ':=' Exp                             (rule 18)

	':='           shift, and enter state 58


State 7

	Instruc -> InsBlock .                               (rule 11)

	id             reduce using rule 11
	';'            reduce using rule 11
	read           reduce using rule 11
	write          reduce using rule 11
	define         reduce using rule 11
	begin          reduce using rule 11
	end            reduce using rule 11
	if             reduce using rule 11
	else           reduce using rule 11
	while          reduce using rule 11
	foreach        reduce using rule 11
	return         reduce using rule 11
	%eof           reduce using rule 11


State 8

	Instruc -> CondSelect .                             (rule 12)

	id             reduce using rule 12
	';'            reduce using rule 12
	read           reduce using rule 12
	write          reduce using rule 12
	define         reduce using rule 12
	begin          reduce using rule 12
	end            reduce using rule 12
	if             reduce using rule 12
	else           reduce using rule 12
	while          reduce using rule 12
	foreach        reduce using rule 12
	return         reduce using rule 12
	%eof           reduce using rule 12


State 9

	Instruc -> While .                                  (rule 13)

	id             reduce using rule 13
	';'            reduce using rule 13
	read           reduce using rule 13
	write          reduce using rule 13
	define         reduce using rule 13
	begin          reduce using rule 13
	end            reduce using rule 13
	if             reduce using rule 13
	else           reduce using rule 13
	while          reduce using rule 13
	foreach        reduce using rule 13
	return         reduce using rule 13
	%eof           reduce using rule 13


State 10

	Instruc -> ForEach .                                (rule 14)

	id             reduce using rule 14
	';'            reduce using rule 14
	read           reduce using rule 14
	write          reduce using rule 14
	define         reduce using rule 14
	begin          reduce using rule 14
	end            reduce using rule 14
	if             reduce using rule 14
	else           reduce using rule 14
	while          reduce using rule 14
	foreach        reduce using rule 14
	return         reduce using rule 14
	%eof           reduce using rule 14


State 11

	Instruc -> Read .                                   (rule 15)

	id             reduce using rule 15
	';'            reduce using rule 15
	read           reduce using rule 15
	write          reduce using rule 15
	define         reduce using rule 15
	begin          reduce using rule 15
	end            reduce using rule 15
	if             reduce using rule 15
	else           reduce using rule 15
	while          reduce using rule 15
	foreach        reduce using rule 15
	return         reduce using rule 15
	%eof           reduce using rule 15


State 12

	Instruc -> Write .                                  (rule 16)

	id             reduce using rule 16
	';'            reduce using rule 16
	read           reduce using rule 16
	write          reduce using rule 16
	define         reduce using rule 16
	begin          reduce using rule 16
	end            reduce using rule 16
	if             reduce using rule 16
	else           reduce using rule 16
	while          reduce using rule 16
	foreach        reduce using rule 16
	return         reduce using rule 16
	%eof           reduce using rule 16


State 13

	Instruc -> Return .                                 (rule 17)

	id             reduce using rule 17
	';'            reduce using rule 17
	read           reduce using rule 17
	write          reduce using rule 17
	define         reduce using rule 17
	begin          reduce using rule 17
	end            reduce using rule 17
	if             reduce using rule 17
	else           reduce using rule 17
	while          reduce using rule 17
	foreach        reduce using rule 17
	return         reduce using rule 17
	%eof           reduce using rule 17


State 14

	Lval -> id .                                        (rule 19)
	Lval -> id . '[' Exp ']'                            (rule 20)
	Lval -> id . '[' Exp ',' Exp ']'                    (rule 21)
	Lval -> id . '[' Ind ':' Ind ']'                    (rule 22)
	Lval -> id . '[' Ind ':' Ind ',' Ind ':' Ind ']'    (rule 23)

	':='           reduce using rule 19
	'['            shift, and enter state 57


State 15

	Read -> read . Exp                                  (rule 74)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 56
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 16

	Write -> write . ExpList                            (rule 75)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 54
	Mat            goto state 25
	ExpList        goto state 55
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 17

	FunDec -> FunDec define . id '(' VarListFunc ')' of type VarType as Instruc    (rule 3)
	FunDec -> FunDec define . id '(' ')' of type VarType as Instruc    (rule 4)

	id             shift, and enter state 53


State 18

	InsBlock -> begin . VarDec InsList end              (rule 62)

	vars           shift, and enter state 52

	VarDec         goto state 51

State 19

	CondSelect -> if . Boolean then Instruc             (rule 70)
	CondSelect -> if . Boolean then Instruc else Instruc    (rule 71)

	true           shift, and enter state 46
	false          shift, and enter state 47
	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 48
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	'!'            shift, and enter state 49
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 44
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30
	Boolean        goto state 50

State 20

	While -> while . Boolean do Instruc                 (rule 72)

	true           shift, and enter state 46
	false          shift, and enter state 47
	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 48
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	'!'            shift, and enter state 49
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 44
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30
	Boolean        goto state 45

State 21

	ForEach -> foreach . id in Exp do Instruc           (rule 73)

	id             shift, and enter state 43


State 22

	Return -> return . Exp                              (rule 76)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 24
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 23

	Exp -> Lval .                                       (rule 37)

	id             reduce using rule 37
	'+'            reduce using rule 37
	'-'            reduce using rule 37
	'*'            reduce using rule 37
	'/'            reduce using rule 37
	'%'            reduce using rule 37
	'**'           reduce using rule 37
	'.'            reduce using rule 37
	'<'            reduce using rule 37
	'>'            reduce using rule 37
	'<='           reduce using rule 37
	'>='           reduce using rule 37
	'='            reduce using rule 37
	'!='           reduce using rule 37
	']'            reduce using rule 37
	'}'            reduce using rule 37
	')'            reduce using rule 37
	':'            reduce using rule 37
	','            reduce using rule 37
	';'            reduce using rule 37
	'&&'           reduce using rule 37
	'||'           reduce using rule 37
	read           reduce using rule 37
	write          reduce using rule 37
	define         reduce using rule 37
	begin          reduce using rule 37
	end            reduce using rule 37
	if             reduce using rule 37
	else           reduce using rule 37
	then           reduce using rule 37
	while          reduce using rule 37
	do             reduce using rule 37
	foreach        reduce using rule 37
	return         reduce using rule 37
	%eof           reduce using rule 37


State 24

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Return -> return Exp .                              (rule 76)

	id             reduce using rule 76
	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	';'            reduce using rule 76
	read           reduce using rule 76
	write          reduce using rule 76
	define         reduce using rule 76
	begin          reduce using rule 76
	end            reduce using rule 76
	if             reduce using rule 76
	else           reduce using rule 76
	while          reduce using rule 76
	foreach        reduce using rule 76
	return         reduce using rule 76
	%eof           reduce using rule 76


State 25

	Exp -> Mat .                                        (rule 28)

	id             reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	'%'            reduce using rule 28
	'**'           reduce using rule 28
	'.'            reduce using rule 28
	'<'            reduce using rule 28
	'>'            reduce using rule 28
	'<='           reduce using rule 28
	'>='           reduce using rule 28
	'='            reduce using rule 28
	'!='           reduce using rule 28
	']'            reduce using rule 28
	'}'            reduce using rule 28
	')'            reduce using rule 28
	':'            reduce using rule 28
	','            reduce using rule 28
	';'            reduce using rule 28
	'&&'           reduce using rule 28
	'||'           reduce using rule 28
	read           reduce using rule 28
	write          reduce using rule 28
	define         reduce using rule 28
	begin          reduce using rule 28
	end            reduce using rule 28
	if             reduce using rule 28
	else           reduce using rule 28
	then           reduce using rule 28
	while          reduce using rule 28
	do             reduce using rule 28
	foreach        reduce using rule 28
	return         reduce using rule 28
	%eof           reduce using rule 28


State 26

	Exp -> FunCall .                                    (rule 42)

	id             reduce using rule 42
	'+'            reduce using rule 42
	'-'            reduce using rule 42
	'*'            reduce using rule 42
	'/'            reduce using rule 42
	'%'            reduce using rule 42
	'**'           reduce using rule 42
	'.'            reduce using rule 42
	'<'            reduce using rule 42
	'>'            reduce using rule 42
	'<='           reduce using rule 42
	'>='           reduce using rule 42
	'='            reduce using rule 42
	'!='           reduce using rule 42
	']'            reduce using rule 42
	'}'            reduce using rule 42
	')'            reduce using rule 42
	':'            reduce using rule 42
	','            reduce using rule 42
	';'            reduce using rule 42
	'&&'           reduce using rule 42
	'||'           reduce using rule 42
	read           reduce using rule 42
	write          reduce using rule 42
	define         reduce using rule 42
	begin          reduce using rule 42
	end            reduce using rule 42
	if             reduce using rule 42
	else           reduce using rule 42
	then           reduce using rule 42
	while          reduce using rule 42
	do             reduce using rule 42
	foreach        reduce using rule 42
	return         reduce using rule 42
	%eof           reduce using rule 42


State 27

	Exp -> FunEmb .                                     (rule 43)

	id             reduce using rule 43
	'+'            reduce using rule 43
	'-'            reduce using rule 43
	'*'            reduce using rule 43
	'/'            reduce using rule 43
	'%'            reduce using rule 43
	'**'           reduce using rule 43
	'.'            reduce using rule 43
	'<'            reduce using rule 43
	'>'            reduce using rule 43
	'<='           reduce using rule 43
	'>='           reduce using rule 43
	'='            reduce using rule 43
	'!='           reduce using rule 43
	']'            reduce using rule 43
	'}'            reduce using rule 43
	')'            reduce using rule 43
	':'            reduce using rule 43
	','            reduce using rule 43
	';'            reduce using rule 43
	'&&'           reduce using rule 43
	'||'           reduce using rule 43
	read           reduce using rule 43
	write          reduce using rule 43
	define         reduce using rule 43
	begin          reduce using rule 43
	end            reduce using rule 43
	if             reduce using rule 43
	else           reduce using rule 43
	then           reduce using rule 43
	while          reduce using rule 43
	do             reduce using rule 43
	foreach        reduce using rule 43
	return         reduce using rule 43
	%eof           reduce using rule 43


State 28

	FunEmb -> Zeroes .                                  (rule 55)

	id             reduce using rule 55
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	'%'            reduce using rule 55
	'**'           reduce using rule 55
	'.'            reduce using rule 55
	'<'            reduce using rule 55
	'>'            reduce using rule 55
	'<='           reduce using rule 55
	'>='           reduce using rule 55
	'='            reduce using rule 55
	'!='           reduce using rule 55
	']'            reduce using rule 55
	'}'            reduce using rule 55
	')'            reduce using rule 55
	':'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	'&&'           reduce using rule 55
	'||'           reduce using rule 55
	read           reduce using rule 55
	write          reduce using rule 55
	define         reduce using rule 55
	begin          reduce using rule 55
	end            reduce using rule 55
	if             reduce using rule 55
	else           reduce using rule 55
	then           reduce using rule 55
	while          reduce using rule 55
	do             reduce using rule 55
	foreach        reduce using rule 55
	return         reduce using rule 55
	%eof           reduce using rule 55


State 29

	FunEmb -> Range .                                   (rule 56)

	id             reduce using rule 56
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	'%'            reduce using rule 56
	'**'           reduce using rule 56
	'.'            reduce using rule 56
	'<'            reduce using rule 56
	'>'            reduce using rule 56
	'<='           reduce using rule 56
	'>='           reduce using rule 56
	'='            reduce using rule 56
	'!='           reduce using rule 56
	']'            reduce using rule 56
	'}'            reduce using rule 56
	')'            reduce using rule 56
	':'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	'&&'           reduce using rule 56
	'||'           reduce using rule 56
	read           reduce using rule 56
	write          reduce using rule 56
	define         reduce using rule 56
	begin          reduce using rule 56
	end            reduce using rule 56
	if             reduce using rule 56
	else           reduce using rule 56
	then           reduce using rule 56
	while          reduce using rule 56
	do             reduce using rule 56
	foreach        reduce using rule 56
	return         reduce using rule 56
	%eof           reduce using rule 56


State 30

	FunEmb -> Eye .                                     (rule 57)

	id             reduce using rule 57
	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'*'            reduce using rule 57
	'/'            reduce using rule 57
	'%'            reduce using rule 57
	'**'           reduce using rule 57
	'.'            reduce using rule 57
	'<'            reduce using rule 57
	'>'            reduce using rule 57
	'<='           reduce using rule 57
	'>='           reduce using rule 57
	'='            reduce using rule 57
	'!='           reduce using rule 57
	']'            reduce using rule 57
	'}'            reduce using rule 57
	')'            reduce using rule 57
	':'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	'&&'           reduce using rule 57
	'||'           reduce using rule 57
	read           reduce using rule 57
	write          reduce using rule 57
	define         reduce using rule 57
	begin          reduce using rule 57
	end            reduce using rule 57
	if             reduce using rule 57
	else           reduce using rule 57
	then           reduce using rule 57
	while          reduce using rule 57
	do             reduce using rule 57
	foreach        reduce using rule 57
	return         reduce using rule 57
	%eof           reduce using rule 57


State 31

	Exp -> string .                                     (rule 27)

	id             reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	'%'            reduce using rule 27
	'**'           reduce using rule 27
	'.'            reduce using rule 27
	'<'            reduce using rule 27
	'>'            reduce using rule 27
	'<='           reduce using rule 27
	'>='           reduce using rule 27
	'='            reduce using rule 27
	'!='           reduce using rule 27
	']'            reduce using rule 27
	'}'            reduce using rule 27
	')'            reduce using rule 27
	':'            reduce using rule 27
	','            reduce using rule 27
	';'            reduce using rule 27
	'&&'           reduce using rule 27
	'||'           reduce using rule 27
	read           reduce using rule 27
	write          reduce using rule 27
	define         reduce using rule 27
	begin          reduce using rule 27
	end            reduce using rule 27
	if             reduce using rule 27
	else           reduce using rule 27
	then           reduce using rule 27
	while          reduce using rule 27
	do             reduce using rule 27
	foreach        reduce using rule 27
	return         reduce using rule 27
	%eof           reduce using rule 27


State 32

	Lval -> id .                                        (rule 19)
	Lval -> id . '[' Exp ']'                            (rule 20)
	Lval -> id . '[' Exp ',' Exp ']'                    (rule 21)
	Lval -> id . '[' Ind ':' Ind ']'                    (rule 22)
	Lval -> id . '[' Ind ':' Ind ',' Ind ':' Ind ']'    (rule 23)
	FunCall -> id . '(' ExpList ')'                     (rule 53)
	FunCall -> id . '(' ')'                             (rule 54)

	id             reduce using rule 19
	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            reduce using rule 19
	'/'            reduce using rule 19
	'%'            reduce using rule 19
	'**'           reduce using rule 19
	'.'            reduce using rule 19
	'<'            reduce using rule 19
	'>'            reduce using rule 19
	'<='           reduce using rule 19
	'>='           reduce using rule 19
	'='            reduce using rule 19
	'!='           reduce using rule 19
	'['            shift, and enter state 57
	']'            reduce using rule 19
	'}'            reduce using rule 19
	'('            shift, and enter state 103
	')'            reduce using rule 19
	':'            reduce using rule 19
	','            reduce using rule 19
	';'            reduce using rule 19
	'&&'           reduce using rule 19
	'||'           reduce using rule 19
	read           reduce using rule 19
	write          reduce using rule 19
	define         reduce using rule 19
	begin          reduce using rule 19
	end            reduce using rule 19
	if             reduce using rule 19
	else           reduce using rule 19
	then           reduce using rule 19
	while          reduce using rule 19
	do             reduce using rule 19
	foreach        reduce using rule 19
	return         reduce using rule 19
	%eof           reduce using rule 19


State 33

	Exp -> num .                                        (rule 26)

	id             reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	'%'            reduce using rule 26
	'**'           reduce using rule 26
	'.'            reduce using rule 26
	'<'            reduce using rule 26
	'>'            reduce using rule 26
	'<='           reduce using rule 26
	'>='           reduce using rule 26
	'='            reduce using rule 26
	'!='           reduce using rule 26
	']'            reduce using rule 26
	'}'            reduce using rule 26
	')'            reduce using rule 26
	':'            reduce using rule 26
	','            reduce using rule 26
	';'            reduce using rule 26
	'&&'           reduce using rule 26
	'||'           reduce using rule 26
	read           reduce using rule 26
	write          reduce using rule 26
	define         reduce using rule 26
	begin          reduce using rule 26
	end            reduce using rule 26
	if             reduce using rule 26
	else           reduce using rule 26
	then           reduce using rule 26
	while          reduce using rule 26
	do             reduce using rule 26
	foreach        reduce using rule 26
	return         reduce using rule 26
	%eof           reduce using rule 26


State 34

	Exp -> '-' . Exp                                    (rule 38)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 102
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 35

	Mat -> '{' . MatList '}'                            (rule 44)
	Mat -> '{' . ExpList '}'                            (rule 45)
	Mat -> '{' . ElemList '}'                           (rule 46)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 54
	Mat            goto state 98
	MatList        goto state 99
	ExpList        goto state 100
	ElemList       goto state 101
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 36

	Exp -> '(' . Exp ')'                                (rule 29)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 97
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 37

	Exp -> '$' . Exp                                    (rule 40)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 96
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 38

	Exp -> '@' . Exp                                    (rule 41)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 95
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 39

	Exp -> '^' . Exp                                    (rule 39)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 94
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 40

	Zeroes -> zeroes . '(' Exp ',' Exp ')'              (rule 58)
	Zeroes -> zeroes . '(' Exp ')'                      (rule 59)

	'('            shift, and enter state 93


State 41

	Range -> range . '(' Exp ')'                        (rule 60)

	'('            shift, and enter state 92


State 42

	Eye -> eye . '(' Exp ')'                            (rule 61)

	'('            shift, and enter state 91


State 43

	ForEach -> foreach id . in Exp do Instruc           (rule 73)

	in             shift, and enter state 90


State 44

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Boolean -> Exp . '<' Exp                            (rule 77)
	Boolean -> Exp . '>' Exp                            (rule 78)
	Boolean -> Exp . '<=' Exp                           (rule 79)
	Boolean -> Exp . '>=' Exp                           (rule 80)
	Boolean -> Exp . '=' Exp                            (rule 81)
	Boolean -> Exp . '!=' Exp                           (rule 82)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	'<'            shift, and enter state 84
	'>'            shift, and enter state 85
	'<='           shift, and enter state 86
	'>='           shift, and enter state 87
	'='            shift, and enter state 88
	'!='           shift, and enter state 89


State 45

	While -> while Boolean . do Instruc                 (rule 72)
	Boolean -> Boolean . '&&' Boolean                   (rule 85)
	Boolean -> Boolean . '||' Boolean                   (rule 86)
	Boolean -> Boolean . '=' Boolean                    (rule 87)

	'='            shift, and enter state 76
	'&&'           shift, and enter state 77
	'||'           shift, and enter state 78
	do             shift, and enter state 83


State 46

	Boolean -> true .                                   (rule 83)

	'='            reduce using rule 83
	')'            reduce using rule 83
	'&&'           reduce using rule 83
	'||'           reduce using rule 83
	then           reduce using rule 83
	do             reduce using rule 83


State 47

	Boolean -> false .                                  (rule 84)

	'='            reduce using rule 84
	')'            reduce using rule 84
	'&&'           reduce using rule 84
	'||'           reduce using rule 84
	then           reduce using rule 84
	do             reduce using rule 84


State 48

	Exp -> '(' . Exp ')'                                (rule 29)
	Boolean -> '(' . Boolean ')'                        (rule 88)

	true           shift, and enter state 46
	false          shift, and enter state 47
	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 48
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	'!'            shift, and enter state 49
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 81
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30
	Boolean        goto state 82

State 49

	Boolean -> '!' . Boolean                            (rule 89)

	true           shift, and enter state 46
	false          shift, and enter state 47
	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 48
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	'!'            shift, and enter state 49
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 44
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30
	Boolean        goto state 80

State 50

	CondSelect -> if Boolean . then Instruc             (rule 70)
	CondSelect -> if Boolean . then Instruc else Instruc    (rule 71)
	Boolean -> Boolean . '&&' Boolean                   (rule 85)
	Boolean -> Boolean . '||' Boolean                   (rule 86)
	Boolean -> Boolean . '=' Boolean                    (rule 87)

	'='            shift, and enter state 76
	'&&'           shift, and enter state 77
	'||'           shift, and enter state 78
	then           shift, and enter state 79


State 51

	InsBlock -> begin VarDec . InsList end              (rule 62)

	id             shift, and enter state 14
	read           shift, and enter state 15
	write          shift, and enter state 16
	begin          shift, and enter state 18
	if             shift, and enter state 19
	while          shift, and enter state 20
	foreach        shift, and enter state 21
	return         shift, and enter state 22

	Instruc        goto state 74
	Asig           goto state 5
	Lval           goto state 6
	InsBlock       goto state 7
	InsList        goto state 75
	CondSelect     goto state 8
	While          goto state 9
	ForEach        goto state 10
	Read           goto state 11
	Write          goto state 12
	Return         goto state 13

State 52

	VarDec -> vars . VarListDec                         (rule 63)

	id             shift, and enter state 73

	VarListDec     goto state 71
	IdList         goto state 72

State 53

	FunDec -> FunDec define id . '(' VarListFunc ')' of type VarType as Instruc    (rule 3)
	FunDec -> FunDec define id . '(' ')' of type VarType as Instruc    (rule 4)

	'('            shift, and enter state 70


State 54

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	ExpList -> Exp .                                    (rule 49)

	id             reduce using rule 49
	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	'}'            reduce using rule 49
	')'            reduce using rule 49
	','            reduce using rule 49
	';'            reduce using rule 49
	read           reduce using rule 49
	write          reduce using rule 49
	define         reduce using rule 49
	begin          reduce using rule 49
	end            reduce using rule 49
	if             reduce using rule 49
	else           reduce using rule 49
	while          reduce using rule 49
	foreach        reduce using rule 49
	return         reduce using rule 49
	%eof           reduce using rule 49


State 55

	ExpList -> ExpList . ',' Exp                        (rule 50)
	Write -> write ExpList .                            (rule 75)

	id             reduce using rule 75
	','            shift, and enter state 69
	';'            reduce using rule 75
	read           reduce using rule 75
	write          reduce using rule 75
	define         reduce using rule 75
	begin          reduce using rule 75
	end            reduce using rule 75
	if             reduce using rule 75
	else           reduce using rule 75
	while          reduce using rule 75
	foreach        reduce using rule 75
	return         reduce using rule 75
	%eof           reduce using rule 75


State 56

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Read -> read Exp .                                  (rule 74)

	id             reduce using rule 74
	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	';'            reduce using rule 74
	read           reduce using rule 74
	write          reduce using rule 74
	define         reduce using rule 74
	begin          reduce using rule 74
	end            reduce using rule 74
	if             reduce using rule 74
	else           reduce using rule 74
	while          reduce using rule 74
	foreach        reduce using rule 74
	return         reduce using rule 74
	%eof           reduce using rule 74


State 57

	Lval -> id '[' . Exp ']'                            (rule 20)
	Lval -> id '[' . Exp ',' Exp ']'                    (rule 21)
	Lval -> id '[' . Ind ':' Ind ']'                    (rule 22)
	Lval -> id '[' . Ind ':' Ind ',' Ind ':' Ind ']'    (rule 23)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	':'            reduce using rule 24
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Ind            goto state 60
	Exp            goto state 61
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 58

	Asig -> Lval ':=' . Exp                             (rule 18)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 59
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 59

	Asig -> Lval ':=' Exp .                             (rule 18)
	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)

	id             reduce using rule 18
	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	';'            reduce using rule 18
	read           reduce using rule 18
	write          reduce using rule 18
	define         reduce using rule 18
	begin          reduce using rule 18
	end            reduce using rule 18
	if             reduce using rule 18
	else           reduce using rule 18
	while          reduce using rule 18
	foreach        reduce using rule 18
	return         reduce using rule 18
	%eof           reduce using rule 18


State 60

	Lval -> id '[' Ind . ':' Ind ']'                    (rule 22)
	Lval -> id '[' Ind . ':' Ind ',' Ind ':' Ind ']'    (rule 23)

	':'            shift, and enter state 146


State 61

	Lval -> id '[' Exp . ']'                            (rule 20)
	Lval -> id '[' Exp . ',' Exp ']'                    (rule 21)
	Ind -> Exp .                                        (rule 25)
	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	']'            shift, and enter state 144
	':'            reduce using rule 25
	','            shift, and enter state 145


State 62

	Exp -> Exp '+' . Exp                                (rule 30)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 143
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 63

	Exp -> Exp '-' . Exp                                (rule 31)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 142
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 64

	Exp -> Exp '*' . Exp                                (rule 32)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 141
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 65

	Exp -> Exp '/' . Exp                                (rule 33)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 140
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 66

	Exp -> Exp '%' . Exp                                (rule 34)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 139
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 67

	Exp -> Exp '**' . Exp                               (rule 35)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 138
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 68

	Exp -> Exp '.' . Exp                                (rule 36)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 137
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 69

	ExpList -> ExpList ',' . Exp                        (rule 50)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 136
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 70

	FunDec -> FunDec define id '(' . VarListFunc ')' of type VarType as Instruc    (rule 3)
	FunDec -> FunDec define id '(' . ')' of type VarType as Instruc    (rule 4)

	id             shift, and enter state 134
	')'            shift, and enter state 135

	VarListFunc    goto state 133

State 71

	VarDec -> vars VarListDec .                         (rule 63)
	VarListDec -> VarListDec . ';' IdList ':' VarType    (rule 65)

	id             reduce using rule 63
	';'            shift, and enter state 132
	read           reduce using rule 63
	write          reduce using rule 63
	begin          reduce using rule 63
	if             reduce using rule 63
	while          reduce using rule 63
	foreach        reduce using rule 63
	return         reduce using rule 63


State 72

	VarListDec -> IdList . ':' VarType                  (rule 64)
	IdList -> IdList . ',' id                           (rule 67)

	':'            shift, and enter state 130
	','            shift, and enter state 131


State 73

	IdList -> id .                                      (rule 66)

	':'            reduce using rule 66
	','            reduce using rule 66


State 74

	InsList -> Instruc .                                (rule 68)

	';'            reduce using rule 68
	end            reduce using rule 68


State 75

	InsBlock -> begin VarDec InsList . end              (rule 62)
	InsList -> InsList . ';' Instruc                    (rule 69)

	';'            shift, and enter state 128
	end            shift, and enter state 129


State 76

	Boolean -> Boolean '=' . Boolean                    (rule 87)

	true           shift, and enter state 46
	false          shift, and enter state 47
	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 48
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	'!'            shift, and enter state 49
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 44
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30
	Boolean        goto state 127

State 77

	Boolean -> Boolean '&&' . Boolean                   (rule 85)

	true           shift, and enter state 46
	false          shift, and enter state 47
	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 48
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	'!'            shift, and enter state 49
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 44
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30
	Boolean        goto state 126

State 78

	Boolean -> Boolean '||' . Boolean                   (rule 86)

	true           shift, and enter state 46
	false          shift, and enter state 47
	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 48
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	'!'            shift, and enter state 49
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 44
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30
	Boolean        goto state 125

State 79

	CondSelect -> if Boolean then . Instruc             (rule 70)
	CondSelect -> if Boolean then . Instruc else Instruc    (rule 71)

	id             shift, and enter state 14
	read           shift, and enter state 15
	write          shift, and enter state 16
	begin          shift, and enter state 18
	if             shift, and enter state 19
	while          shift, and enter state 20
	foreach        shift, and enter state 21
	return         shift, and enter state 22

	Instruc        goto state 124
	Asig           goto state 5
	Lval           goto state 6
	InsBlock       goto state 7
	CondSelect     goto state 8
	While          goto state 9
	ForEach        goto state 10
	Read           goto state 11
	Write          goto state 12
	Return         goto state 13

State 80

	Boolean -> Boolean . '&&' Boolean                   (rule 85)
	Boolean -> Boolean . '||' Boolean                   (rule 86)
	Boolean -> Boolean . '=' Boolean                    (rule 87)
	Boolean -> '!' Boolean .                            (rule 89)

	'='            shift, and enter state 76
	')'            reduce using rule 89
	'&&'           reduce using rule 89
	'||'           reduce using rule 89
	then           reduce using rule 89
	do             reduce using rule 89


State 81

	Exp -> '(' Exp . ')'                                (rule 29)
	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Boolean -> Exp . '<' Exp                            (rule 77)
	Boolean -> Exp . '>' Exp                            (rule 78)
	Boolean -> Exp . '<=' Exp                           (rule 79)
	Boolean -> Exp . '>=' Exp                           (rule 80)
	Boolean -> Exp . '=' Exp                            (rule 81)
	Boolean -> Exp . '!=' Exp                           (rule 82)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	'<'            shift, and enter state 84
	'>'            shift, and enter state 85
	'<='           shift, and enter state 86
	'>='           shift, and enter state 87
	'='            shift, and enter state 88
	'!='           shift, and enter state 89
	')'            shift, and enter state 111


State 82

	Boolean -> Boolean . '&&' Boolean                   (rule 85)
	Boolean -> Boolean . '||' Boolean                   (rule 86)
	Boolean -> Boolean . '=' Boolean                    (rule 87)
	Boolean -> '(' Boolean . ')'                        (rule 88)

	'='            shift, and enter state 76
	')'            shift, and enter state 123
	'&&'           shift, and enter state 77
	'||'           shift, and enter state 78


State 83

	While -> while Boolean do . Instruc                 (rule 72)

	id             shift, and enter state 14
	read           shift, and enter state 15
	write          shift, and enter state 16
	begin          shift, and enter state 18
	if             shift, and enter state 19
	while          shift, and enter state 20
	foreach        shift, and enter state 21
	return         shift, and enter state 22

	Instruc        goto state 122
	Asig           goto state 5
	Lval           goto state 6
	InsBlock       goto state 7
	CondSelect     goto state 8
	While          goto state 9
	ForEach        goto state 10
	Read           goto state 11
	Write          goto state 12
	Return         goto state 13

State 84

	Boolean -> Exp '<' . Exp                            (rule 77)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 121
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 85

	Boolean -> Exp '>' . Exp                            (rule 78)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 120
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 86

	Boolean -> Exp '<=' . Exp                           (rule 79)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 119
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 87

	Boolean -> Exp '>=' . Exp                           (rule 80)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 118
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 88

	Boolean -> Exp '=' . Exp                            (rule 81)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 117
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 89

	Boolean -> Exp '!=' . Exp                           (rule 82)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 116
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 90

	ForEach -> foreach id in . Exp do Instruc           (rule 73)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 115
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 91

	Eye -> eye '(' . Exp ')'                            (rule 61)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 114
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 92

	Range -> range '(' . Exp ')'                        (rule 60)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 113
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 93

	Zeroes -> zeroes '(' . Exp ',' Exp ')'              (rule 58)
	Zeroes -> zeroes '(' . Exp ')'                      (rule 59)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 112
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 94

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Exp -> '^' Exp .                                    (rule 39)

	id             reduce using rule 39
	'+'            reduce using rule 39
	'-'            reduce using rule 39
	'*'            reduce using rule 39
	'/'            reduce using rule 39
	'%'            reduce using rule 39
	'**'           shift, and enter state 67
	'.'            reduce using rule 39
	'<'            reduce using rule 39
	'>'            reduce using rule 39
	'<='           reduce using rule 39
	'>='           reduce using rule 39
	'='            reduce using rule 39
	'!='           reduce using rule 39
	']'            reduce using rule 39
	'}'            reduce using rule 39
	')'            reduce using rule 39
	':'            reduce using rule 39
	','            reduce using rule 39
	';'            reduce using rule 39
	'&&'           reduce using rule 39
	'||'           reduce using rule 39
	read           reduce using rule 39
	write          reduce using rule 39
	define         reduce using rule 39
	begin          reduce using rule 39
	end            reduce using rule 39
	if             reduce using rule 39
	else           reduce using rule 39
	then           reduce using rule 39
	while          reduce using rule 39
	do             reduce using rule 39
	foreach        reduce using rule 39
	return         reduce using rule 39
	%eof           reduce using rule 39


State 95

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Exp -> '@' Exp .                                    (rule 41)

	id             reduce using rule 41
	'+'            reduce using rule 41
	'-'            reduce using rule 41
	'*'            reduce using rule 41
	'/'            reduce using rule 41
	'%'            reduce using rule 41
	'**'           shift, and enter state 67
	'.'            reduce using rule 41
	'<'            reduce using rule 41
	'>'            reduce using rule 41
	'<='           reduce using rule 41
	'>='           reduce using rule 41
	'='            reduce using rule 41
	'!='           reduce using rule 41
	']'            reduce using rule 41
	'}'            reduce using rule 41
	')'            reduce using rule 41
	':'            reduce using rule 41
	','            reduce using rule 41
	';'            reduce using rule 41
	'&&'           reduce using rule 41
	'||'           reduce using rule 41
	read           reduce using rule 41
	write          reduce using rule 41
	define         reduce using rule 41
	begin          reduce using rule 41
	end            reduce using rule 41
	if             reduce using rule 41
	else           reduce using rule 41
	then           reduce using rule 41
	while          reduce using rule 41
	do             reduce using rule 41
	foreach        reduce using rule 41
	return         reduce using rule 41
	%eof           reduce using rule 41


State 96

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Exp -> '$' Exp .                                    (rule 40)

	id             reduce using rule 40
	'+'            reduce using rule 40
	'-'            reduce using rule 40
	'*'            reduce using rule 40
	'/'            reduce using rule 40
	'%'            reduce using rule 40
	'**'           shift, and enter state 67
	'.'            reduce using rule 40
	'<'            reduce using rule 40
	'>'            reduce using rule 40
	'<='           reduce using rule 40
	'>='           reduce using rule 40
	'='            reduce using rule 40
	'!='           reduce using rule 40
	']'            reduce using rule 40
	'}'            reduce using rule 40
	')'            reduce using rule 40
	':'            reduce using rule 40
	','            reduce using rule 40
	';'            reduce using rule 40
	'&&'           reduce using rule 40
	'||'           reduce using rule 40
	read           reduce using rule 40
	write          reduce using rule 40
	define         reduce using rule 40
	begin          reduce using rule 40
	end            reduce using rule 40
	if             reduce using rule 40
	else           reduce using rule 40
	then           reduce using rule 40
	while          reduce using rule 40
	do             reduce using rule 40
	foreach        reduce using rule 40
	return         reduce using rule 40
	%eof           reduce using rule 40


State 97

	Exp -> '(' Exp . ')'                                (rule 29)
	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	')'            shift, and enter state 111


State 98

	Exp -> Mat .                                        (rule 28)
	MatList -> Mat .                                    (rule 47)

	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	'%'            reduce using rule 28
	'**'           reduce using rule 28
	'.'            reduce using rule 28
	'}'            reduce using rule 47
			(reduce using rule 28)

	','            reduce using rule 28
	';'            reduce using rule 47
			(reduce using rule 28)



State 99

	Mat -> '{' MatList . '}'                            (rule 44)
	MatList -> MatList . ';' Mat                        (rule 48)

	'}'            shift, and enter state 109
	';'            shift, and enter state 110


State 100

	Mat -> '{' ExpList . '}'                            (rule 45)
	ExpList -> ExpList . ',' Exp                        (rule 50)
	ElemList -> ExpList .                               (rule 51)

	'}'            shift, and enter state 108
			(reduce using rule 51)

	','            shift, and enter state 69
	';'            reduce using rule 51


State 101

	Mat -> '{' ElemList . '}'                           (rule 46)
	ElemList -> ElemList . ';' ExpList                  (rule 52)

	'}'            shift, and enter state 106
	';'            shift, and enter state 107


State 102

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Exp -> '-' Exp .                                    (rule 38)

	id             reduce using rule 38
	'+'            reduce using rule 38
	'-'            reduce using rule 38
	'*'            reduce using rule 38
	'/'            reduce using rule 38
	'%'            reduce using rule 38
	'**'           shift, and enter state 67
	'.'            reduce using rule 38
	'<'            reduce using rule 38
	'>'            reduce using rule 38
	'<='           reduce using rule 38
	'>='           reduce using rule 38
	'='            reduce using rule 38
	'!='           reduce using rule 38
	']'            reduce using rule 38
	'}'            reduce using rule 38
	')'            reduce using rule 38
	':'            reduce using rule 38
	','            reduce using rule 38
	';'            reduce using rule 38
	'&&'           reduce using rule 38
	'||'           reduce using rule 38
	read           reduce using rule 38
	write          reduce using rule 38
	define         reduce using rule 38
	begin          reduce using rule 38
	end            reduce using rule 38
	if             reduce using rule 38
	else           reduce using rule 38
	then           reduce using rule 38
	while          reduce using rule 38
	do             reduce using rule 38
	foreach        reduce using rule 38
	return         reduce using rule 38
	%eof           reduce using rule 38


State 103

	FunCall -> id '(' . ExpList ')'                     (rule 53)
	FunCall -> id '(' . ')'                             (rule 54)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	')'            shift, and enter state 105
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 54
	Mat            goto state 25
	ExpList        goto state 104
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 104

	ExpList -> ExpList . ',' Exp                        (rule 50)
	FunCall -> id '(' ExpList . ')'                     (rule 53)

	')'            shift, and enter state 169
	','            shift, and enter state 69


State 105

	FunCall -> id '(' ')' .                             (rule 54)

	id             reduce using rule 54
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'%'            reduce using rule 54
	'**'           reduce using rule 54
	'.'            reduce using rule 54
	'<'            reduce using rule 54
	'>'            reduce using rule 54
	'<='           reduce using rule 54
	'>='           reduce using rule 54
	'='            reduce using rule 54
	'!='           reduce using rule 54
	']'            reduce using rule 54
	'}'            reduce using rule 54
	')'            reduce using rule 54
	':'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54
	'&&'           reduce using rule 54
	'||'           reduce using rule 54
	read           reduce using rule 54
	write          reduce using rule 54
	define         reduce using rule 54
	begin          reduce using rule 54
	end            reduce using rule 54
	if             reduce using rule 54
	else           reduce using rule 54
	then           reduce using rule 54
	while          reduce using rule 54
	do             reduce using rule 54
	foreach        reduce using rule 54
	return         reduce using rule 54
	%eof           reduce using rule 54


State 106

	Mat -> '{' ElemList '}' .                           (rule 46)

	id             reduce using rule 46
	'+'            reduce using rule 46
	'-'            reduce using rule 46
	'*'            reduce using rule 46
	'/'            reduce using rule 46
	'%'            reduce using rule 46
	'**'           reduce using rule 46
	'.'            reduce using rule 46
	'<'            reduce using rule 46
	'>'            reduce using rule 46
	'<='           reduce using rule 46
	'>='           reduce using rule 46
	'='            reduce using rule 46
	'!='           reduce using rule 46
	']'            reduce using rule 46
	'}'            reduce using rule 46
	')'            reduce using rule 46
	':'            reduce using rule 46
	','            reduce using rule 46
	';'            reduce using rule 46
	'&&'           reduce using rule 46
	'||'           reduce using rule 46
	read           reduce using rule 46
	write          reduce using rule 46
	define         reduce using rule 46
	begin          reduce using rule 46
	end            reduce using rule 46
	if             reduce using rule 46
	else           reduce using rule 46
	then           reduce using rule 46
	while          reduce using rule 46
	do             reduce using rule 46
	foreach        reduce using rule 46
	return         reduce using rule 46
	%eof           reduce using rule 46


State 107

	ElemList -> ElemList ';' . ExpList                  (rule 52)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 54
	Mat            goto state 25
	ExpList        goto state 168
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 108

	Mat -> '{' ExpList '}' .                            (rule 45)

	id             reduce using rule 45
	'+'            reduce using rule 45
	'-'            reduce using rule 45
	'*'            reduce using rule 45
	'/'            reduce using rule 45
	'%'            reduce using rule 45
	'**'           reduce using rule 45
	'.'            reduce using rule 45
	'<'            reduce using rule 45
	'>'            reduce using rule 45
	'<='           reduce using rule 45
	'>='           reduce using rule 45
	'='            reduce using rule 45
	'!='           reduce using rule 45
	']'            reduce using rule 45
	'}'            reduce using rule 45
	')'            reduce using rule 45
	':'            reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45
	'&&'           reduce using rule 45
	'||'           reduce using rule 45
	read           reduce using rule 45
	write          reduce using rule 45
	define         reduce using rule 45
	begin          reduce using rule 45
	end            reduce using rule 45
	if             reduce using rule 45
	else           reduce using rule 45
	then           reduce using rule 45
	while          reduce using rule 45
	do             reduce using rule 45
	foreach        reduce using rule 45
	return         reduce using rule 45
	%eof           reduce using rule 45


State 109

	Mat -> '{' MatList '}' .                            (rule 44)

	id             reduce using rule 44
	'+'            reduce using rule 44
	'-'            reduce using rule 44
	'*'            reduce using rule 44
	'/'            reduce using rule 44
	'%'            reduce using rule 44
	'**'           reduce using rule 44
	'.'            reduce using rule 44
	'<'            reduce using rule 44
	'>'            reduce using rule 44
	'<='           reduce using rule 44
	'>='           reduce using rule 44
	'='            reduce using rule 44
	'!='           reduce using rule 44
	']'            reduce using rule 44
	'}'            reduce using rule 44
	')'            reduce using rule 44
	':'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44
	'&&'           reduce using rule 44
	'||'           reduce using rule 44
	read           reduce using rule 44
	write          reduce using rule 44
	define         reduce using rule 44
	begin          reduce using rule 44
	end            reduce using rule 44
	if             reduce using rule 44
	else           reduce using rule 44
	then           reduce using rule 44
	while          reduce using rule 44
	do             reduce using rule 44
	foreach        reduce using rule 44
	return         reduce using rule 44
	%eof           reduce using rule 44


State 110

	MatList -> MatList ';' . Mat                        (rule 48)

	'{'            shift, and enter state 35

	Mat            goto state 167

State 111

	Exp -> '(' Exp ')' .                                (rule 29)

	id             reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	'%'            reduce using rule 29
	'**'           reduce using rule 29
	'.'            reduce using rule 29
	'<'            reduce using rule 29
	'>'            reduce using rule 29
	'<='           reduce using rule 29
	'>='           reduce using rule 29
	'='            reduce using rule 29
	'!='           reduce using rule 29
	']'            reduce using rule 29
	'}'            reduce using rule 29
	')'            reduce using rule 29
	':'            reduce using rule 29
	','            reduce using rule 29
	';'            reduce using rule 29
	'&&'           reduce using rule 29
	'||'           reduce using rule 29
	read           reduce using rule 29
	write          reduce using rule 29
	define         reduce using rule 29
	begin          reduce using rule 29
	end            reduce using rule 29
	if             reduce using rule 29
	else           reduce using rule 29
	then           reduce using rule 29
	while          reduce using rule 29
	do             reduce using rule 29
	foreach        reduce using rule 29
	return         reduce using rule 29
	%eof           reduce using rule 29


State 112

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Zeroes -> zeroes '(' Exp . ',' Exp ')'              (rule 58)
	Zeroes -> zeroes '(' Exp . ')'                      (rule 59)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	')'            shift, and enter state 165
	','            shift, and enter state 166


State 113

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Range -> range '(' Exp . ')'                        (rule 60)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	')'            shift, and enter state 164


State 114

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Eye -> eye '(' Exp . ')'                            (rule 61)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	')'            shift, and enter state 163


State 115

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	ForEach -> foreach id in Exp . do Instruc           (rule 73)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	do             shift, and enter state 162


State 116

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Boolean -> Exp '!=' Exp .                           (rule 82)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	'='            reduce using rule 82
	')'            reduce using rule 82
	'&&'           reduce using rule 82
	'||'           reduce using rule 82
	then           reduce using rule 82
	do             reduce using rule 82


State 117

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Boolean -> Exp '=' Exp .                            (rule 81)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	'='            reduce using rule 81
	')'            reduce using rule 81
	'&&'           reduce using rule 81
	'||'           reduce using rule 81
	then           reduce using rule 81
	do             reduce using rule 81


State 118

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Boolean -> Exp '>=' Exp .                           (rule 80)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	'='            reduce using rule 80
	')'            reduce using rule 80
	'&&'           reduce using rule 80
	'||'           reduce using rule 80
	then           reduce using rule 80
	do             reduce using rule 80


State 119

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Boolean -> Exp '<=' Exp .                           (rule 79)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	'='            reduce using rule 79
	')'            reduce using rule 79
	'&&'           reduce using rule 79
	'||'           reduce using rule 79
	then           reduce using rule 79
	do             reduce using rule 79


State 120

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Boolean -> Exp '>' Exp .                            (rule 78)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	'='            reduce using rule 78
	')'            reduce using rule 78
	'&&'           reduce using rule 78
	'||'           reduce using rule 78
	then           reduce using rule 78
	do             reduce using rule 78


State 121

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Boolean -> Exp '<' Exp .                            (rule 77)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	'='            reduce using rule 77
	')'            reduce using rule 77
	'&&'           reduce using rule 77
	'||'           reduce using rule 77
	then           reduce using rule 77
	do             reduce using rule 77


State 122

	While -> while Boolean do Instruc .                 (rule 72)

	id             reduce using rule 72
	';'            reduce using rule 72
	read           reduce using rule 72
	write          reduce using rule 72
	define         reduce using rule 72
	begin          reduce using rule 72
	end            reduce using rule 72
	if             reduce using rule 72
	else           reduce using rule 72
	while          reduce using rule 72
	foreach        reduce using rule 72
	return         reduce using rule 72
	%eof           reduce using rule 72


State 123

	Boolean -> '(' Boolean ')' .                        (rule 88)

	'='            reduce using rule 88
	')'            reduce using rule 88
	'&&'           reduce using rule 88
	'||'           reduce using rule 88
	then           reduce using rule 88
	do             reduce using rule 88


State 124

	CondSelect -> if Boolean then Instruc .             (rule 70)
	CondSelect -> if Boolean then Instruc . else Instruc    (rule 71)

	id             reduce using rule 70
	';'            reduce using rule 70
	read           reduce using rule 70
	write          reduce using rule 70
	define         reduce using rule 70
	begin          reduce using rule 70
	end            reduce using rule 70
	if             reduce using rule 70
	else           shift, and enter state 161
			(reduce using rule 70)

	while          reduce using rule 70
	foreach        reduce using rule 70
	return         reduce using rule 70
	%eof           reduce using rule 70


State 125

	Boolean -> Boolean . '&&' Boolean                   (rule 85)
	Boolean -> Boolean . '||' Boolean                   (rule 86)
	Boolean -> Boolean '||' Boolean .                   (rule 86)
	Boolean -> Boolean . '=' Boolean                    (rule 87)

	'='            shift, and enter state 76
	')'            reduce using rule 86
	'&&'           shift, and enter state 77
	'||'           reduce using rule 86
	then           reduce using rule 86
	do             reduce using rule 86


State 126

	Boolean -> Boolean . '&&' Boolean                   (rule 85)
	Boolean -> Boolean '&&' Boolean .                   (rule 85)
	Boolean -> Boolean . '||' Boolean                   (rule 86)
	Boolean -> Boolean . '=' Boolean                    (rule 87)

	'='            shift, and enter state 76
	')'            reduce using rule 85
	'&&'           reduce using rule 85
	'||'           reduce using rule 85
	then           reduce using rule 85
	do             reduce using rule 85


State 127

	Boolean -> Boolean . '&&' Boolean                   (rule 85)
	Boolean -> Boolean . '||' Boolean                   (rule 86)
	Boolean -> Boolean . '=' Boolean                    (rule 87)
	Boolean -> Boolean '=' Boolean .                    (rule 87)

	'='            reduce using rule 87
	')'            reduce using rule 87
	'&&'           reduce using rule 87
	'||'           reduce using rule 87
	then           reduce using rule 87
	do             reduce using rule 87


State 128

	InsList -> InsList ';' . Instruc                    (rule 69)

	id             shift, and enter state 14
	read           shift, and enter state 15
	write          shift, and enter state 16
	begin          shift, and enter state 18
	if             shift, and enter state 19
	while          shift, and enter state 20
	foreach        shift, and enter state 21
	return         shift, and enter state 22

	Instruc        goto state 160
	Asig           goto state 5
	Lval           goto state 6
	InsBlock       goto state 7
	CondSelect     goto state 8
	While          goto state 9
	ForEach        goto state 10
	Read           goto state 11
	Write          goto state 12
	Return         goto state 13

State 129

	InsBlock -> begin VarDec InsList end .              (rule 62)

	id             reduce using rule 62
	';'            reduce using rule 62
	read           reduce using rule 62
	write          reduce using rule 62
	define         reduce using rule 62
	begin          reduce using rule 62
	end            reduce using rule 62
	if             reduce using rule 62
	else           reduce using rule 62
	while          reduce using rule 62
	foreach        reduce using rule 62
	return         reduce using rule 62
	%eof           reduce using rule 62


State 130

	VarListDec -> IdList ':' . VarType                  (rule 64)

	tnum           shift, and enter state 157
	tvec           shift, and enter state 158
	tmat           shift, and enter state 159

	VarType        goto state 156

State 131

	IdList -> IdList ',' . id                           (rule 67)

	id             shift, and enter state 155


State 132

	VarListDec -> VarListDec ';' . IdList ':' VarType    (rule 65)

	id             shift, and enter state 73

	IdList         goto state 154

State 133

	FunDec -> FunDec define id '(' VarListFunc . ')' of type VarType as Instruc    (rule 3)
	VarListFunc -> VarListFunc . ',' VarListFunc        (rule 6)

	')'            shift, and enter state 152
	','            shift, and enter state 153


State 134

	VarListFunc -> id . ':' VarType                     (rule 5)

	':'            shift, and enter state 151


State 135

	FunDec -> FunDec define id '(' ')' . of type VarType as Instruc    (rule 4)

	of             shift, and enter state 150


State 136

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	ExpList -> ExpList ',' Exp .                        (rule 50)

	id             reduce using rule 50
	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	'}'            reduce using rule 50
	')'            reduce using rule 50
	','            reduce using rule 50
	';'            reduce using rule 50
	read           reduce using rule 50
	write          reduce using rule 50
	define         reduce using rule 50
	begin          reduce using rule 50
	end            reduce using rule 50
	if             reduce using rule 50
	else           reduce using rule 50
	while          reduce using rule 50
	foreach        reduce using rule 50
	return         reduce using rule 50
	%eof           reduce using rule 50


State 137

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Exp -> Exp '.' Exp .                                (rule 36)

	id             reduce using rule 36
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'*'            reduce using rule 36
	'/'            reduce using rule 36
	'%'            reduce using rule 36
	'**'           shift, and enter state 67
	'.'            reduce using rule 36
	'<'            reduce using rule 36
	'>'            reduce using rule 36
	'<='           reduce using rule 36
	'>='           reduce using rule 36
	'='            reduce using rule 36
	'!='           reduce using rule 36
	']'            reduce using rule 36
	'}'            reduce using rule 36
	')'            reduce using rule 36
	':'            reduce using rule 36
	','            reduce using rule 36
	';'            reduce using rule 36
	'&&'           reduce using rule 36
	'||'           reduce using rule 36
	read           reduce using rule 36
	write          reduce using rule 36
	define         reduce using rule 36
	begin          reduce using rule 36
	end            reduce using rule 36
	if             reduce using rule 36
	else           reduce using rule 36
	then           reduce using rule 36
	while          reduce using rule 36
	do             reduce using rule 36
	foreach        reduce using rule 36
	return         reduce using rule 36
	%eof           reduce using rule 36


State 138

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp '**' Exp .                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)

	id             reduce using rule 35
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'*'            reduce using rule 35
	'/'            reduce using rule 35
	'%'            reduce using rule 35
	'**'           reduce using rule 35
	'.'            reduce using rule 35
	'<'            reduce using rule 35
	'>'            reduce using rule 35
	'<='           reduce using rule 35
	'>='           reduce using rule 35
	'='            reduce using rule 35
	'!='           reduce using rule 35
	']'            reduce using rule 35
	'}'            reduce using rule 35
	')'            reduce using rule 35
	':'            reduce using rule 35
	','            reduce using rule 35
	';'            reduce using rule 35
	'&&'           reduce using rule 35
	'||'           reduce using rule 35
	read           reduce using rule 35
	write          reduce using rule 35
	define         reduce using rule 35
	begin          reduce using rule 35
	end            reduce using rule 35
	if             reduce using rule 35
	else           reduce using rule 35
	then           reduce using rule 35
	while          reduce using rule 35
	do             reduce using rule 35
	foreach        reduce using rule 35
	return         reduce using rule 35
	%eof           reduce using rule 35


State 139

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp '%' Exp .                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)

	id             reduce using rule 34
	'+'            reduce using rule 34
	'-'            reduce using rule 34
	'*'            reduce using rule 34
	'/'            reduce using rule 34
	'%'            reduce using rule 34
	'**'           shift, and enter state 67
	'.'            reduce using rule 34
	'<'            reduce using rule 34
	'>'            reduce using rule 34
	'<='           reduce using rule 34
	'>='           reduce using rule 34
	'='            reduce using rule 34
	'!='           reduce using rule 34
	']'            reduce using rule 34
	'}'            reduce using rule 34
	')'            reduce using rule 34
	':'            reduce using rule 34
	','            reduce using rule 34
	';'            reduce using rule 34
	'&&'           reduce using rule 34
	'||'           reduce using rule 34
	read           reduce using rule 34
	write          reduce using rule 34
	define         reduce using rule 34
	begin          reduce using rule 34
	end            reduce using rule 34
	if             reduce using rule 34
	else           reduce using rule 34
	then           reduce using rule 34
	while          reduce using rule 34
	do             reduce using rule 34
	foreach        reduce using rule 34
	return         reduce using rule 34
	%eof           reduce using rule 34


State 140

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp '/' Exp .                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)

	id             reduce using rule 33
	'+'            reduce using rule 33
	'-'            reduce using rule 33
	'*'            reduce using rule 33
	'/'            reduce using rule 33
	'%'            reduce using rule 33
	'**'           shift, and enter state 67
	'.'            reduce using rule 33
	'<'            reduce using rule 33
	'>'            reduce using rule 33
	'<='           reduce using rule 33
	'>='           reduce using rule 33
	'='            reduce using rule 33
	'!='           reduce using rule 33
	']'            reduce using rule 33
	'}'            reduce using rule 33
	')'            reduce using rule 33
	':'            reduce using rule 33
	','            reduce using rule 33
	';'            reduce using rule 33
	'&&'           reduce using rule 33
	'||'           reduce using rule 33
	read           reduce using rule 33
	write          reduce using rule 33
	define         reduce using rule 33
	begin          reduce using rule 33
	end            reduce using rule 33
	if             reduce using rule 33
	else           reduce using rule 33
	then           reduce using rule 33
	while          reduce using rule 33
	do             reduce using rule 33
	foreach        reduce using rule 33
	return         reduce using rule 33
	%eof           reduce using rule 33


State 141

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp '*' Exp .                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)

	id             reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'*'            reduce using rule 32
	'/'            reduce using rule 32
	'%'            reduce using rule 32
	'**'           shift, and enter state 67
	'.'            reduce using rule 32
	'<'            reduce using rule 32
	'>'            reduce using rule 32
	'<='           reduce using rule 32
	'>='           reduce using rule 32
	'='            reduce using rule 32
	'!='           reduce using rule 32
	']'            reduce using rule 32
	'}'            reduce using rule 32
	')'            reduce using rule 32
	':'            reduce using rule 32
	','            reduce using rule 32
	';'            reduce using rule 32
	'&&'           reduce using rule 32
	'||'           reduce using rule 32
	read           reduce using rule 32
	write          reduce using rule 32
	define         reduce using rule 32
	begin          reduce using rule 32
	end            reduce using rule 32
	if             reduce using rule 32
	else           reduce using rule 32
	then           reduce using rule 32
	while          reduce using rule 32
	do             reduce using rule 32
	foreach        reduce using rule 32
	return         reduce using rule 32
	%eof           reduce using rule 32


State 142

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp '-' Exp .                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)

	id             reduce using rule 31
	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	'<'            reduce using rule 31
	'>'            reduce using rule 31
	'<='           reduce using rule 31
	'>='           reduce using rule 31
	'='            reduce using rule 31
	'!='           reduce using rule 31
	']'            reduce using rule 31
	'}'            reduce using rule 31
	')'            reduce using rule 31
	':'            reduce using rule 31
	','            reduce using rule 31
	';'            reduce using rule 31
	'&&'           reduce using rule 31
	'||'           reduce using rule 31
	read           reduce using rule 31
	write          reduce using rule 31
	define         reduce using rule 31
	begin          reduce using rule 31
	end            reduce using rule 31
	if             reduce using rule 31
	else           reduce using rule 31
	then           reduce using rule 31
	while          reduce using rule 31
	do             reduce using rule 31
	foreach        reduce using rule 31
	return         reduce using rule 31
	%eof           reduce using rule 31


State 143

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp '+' Exp .                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)

	id             reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	'<'            reduce using rule 30
	'>'            reduce using rule 30
	'<='           reduce using rule 30
	'>='           reduce using rule 30
	'='            reduce using rule 30
	'!='           reduce using rule 30
	']'            reduce using rule 30
	'}'            reduce using rule 30
	')'            reduce using rule 30
	':'            reduce using rule 30
	','            reduce using rule 30
	';'            reduce using rule 30
	'&&'           reduce using rule 30
	'||'           reduce using rule 30
	read           reduce using rule 30
	write          reduce using rule 30
	define         reduce using rule 30
	begin          reduce using rule 30
	end            reduce using rule 30
	if             reduce using rule 30
	else           reduce using rule 30
	then           reduce using rule 30
	while          reduce using rule 30
	do             reduce using rule 30
	foreach        reduce using rule 30
	return         reduce using rule 30
	%eof           reduce using rule 30


State 144

	Lval -> id '[' Exp ']' .                            (rule 20)

	id             reduce using rule 20
	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            reduce using rule 20
	'/'            reduce using rule 20
	'%'            reduce using rule 20
	'**'           reduce using rule 20
	'.'            reduce using rule 20
	'<'            reduce using rule 20
	'>'            reduce using rule 20
	'<='           reduce using rule 20
	'>='           reduce using rule 20
	'='            reduce using rule 20
	'!='           reduce using rule 20
	':='           reduce using rule 20
	']'            reduce using rule 20
	'}'            reduce using rule 20
	')'            reduce using rule 20
	':'            reduce using rule 20
	','            reduce using rule 20
	';'            reduce using rule 20
	'&&'           reduce using rule 20
	'||'           reduce using rule 20
	read           reduce using rule 20
	write          reduce using rule 20
	define         reduce using rule 20
	begin          reduce using rule 20
	end            reduce using rule 20
	if             reduce using rule 20
	else           reduce using rule 20
	then           reduce using rule 20
	while          reduce using rule 20
	do             reduce using rule 20
	foreach        reduce using rule 20
	return         reduce using rule 20
	%eof           reduce using rule 20


State 145

	Lval -> id '[' Exp ',' . Exp ']'                    (rule 21)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 149
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 146

	Lval -> id '[' Ind ':' . Ind ']'                    (rule 22)
	Lval -> id '[' Ind ':' . Ind ',' Ind ':' Ind ']'    (rule 23)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	']'            reduce using rule 24
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	','            reduce using rule 24
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Ind            goto state 147
	Exp            goto state 148
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 147

	Lval -> id '[' Ind ':' Ind . ']'                    (rule 22)
	Lval -> id '[' Ind ':' Ind . ',' Ind ':' Ind ']'    (rule 23)

	']'            shift, and enter state 179
	','            shift, and enter state 180


State 148

	Ind -> Exp .                                        (rule 25)
	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	']'            reduce using rule 25
	':'            reduce using rule 25
	','            reduce using rule 25


State 149

	Lval -> id '[' Exp ',' Exp . ']'                    (rule 21)
	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	']'            shift, and enter state 178


State 150

	FunDec -> FunDec define id '(' ')' of . type VarType as Instruc    (rule 4)

	type           shift, and enter state 177


State 151

	VarListFunc -> id ':' . VarType                     (rule 5)

	tnum           shift, and enter state 157
	tvec           shift, and enter state 158
	tmat           shift, and enter state 159

	VarType        goto state 176

State 152

	FunDec -> FunDec define id '(' VarListFunc ')' . of type VarType as Instruc    (rule 3)

	of             shift, and enter state 175


State 153

	VarListFunc -> VarListFunc ',' . VarListFunc        (rule 6)

	id             shift, and enter state 134

	VarListFunc    goto state 174

State 154

	VarListDec -> VarListDec ';' IdList . ':' VarType    (rule 65)
	IdList -> IdList . ',' id                           (rule 67)

	':'            shift, and enter state 173
	','            shift, and enter state 131


State 155

	IdList -> IdList ',' id .                           (rule 67)

	':'            reduce using rule 67
	','            reduce using rule 67


State 156

	VarListDec -> IdList ':' VarType .                  (rule 64)

	id             reduce using rule 64
	';'            reduce using rule 64
	read           reduce using rule 64
	write          reduce using rule 64
	begin          reduce using rule 64
	if             reduce using rule 64
	while          reduce using rule 64
	foreach        reduce using rule 64
	return         reduce using rule 64


State 157

	VarType -> tnum .                                   (rule 7)

	id             reduce using rule 7
	')'            reduce using rule 7
	','            reduce using rule 7
	';'            reduce using rule 7
	read           reduce using rule 7
	write          reduce using rule 7
	as             reduce using rule 7
	begin          reduce using rule 7
	if             reduce using rule 7
	while          reduce using rule 7
	foreach        reduce using rule 7
	return         reduce using rule 7


State 158

	VarType -> tvec .                                   (rule 8)

	id             reduce using rule 8
	')'            reduce using rule 8
	','            reduce using rule 8
	';'            reduce using rule 8
	read           reduce using rule 8
	write          reduce using rule 8
	as             reduce using rule 8
	begin          reduce using rule 8
	if             reduce using rule 8
	while          reduce using rule 8
	foreach        reduce using rule 8
	return         reduce using rule 8


State 159

	VarType -> tmat .                                   (rule 9)

	id             reduce using rule 9
	')'            reduce using rule 9
	','            reduce using rule 9
	';'            reduce using rule 9
	read           reduce using rule 9
	write          reduce using rule 9
	as             reduce using rule 9
	begin          reduce using rule 9
	if             reduce using rule 9
	while          reduce using rule 9
	foreach        reduce using rule 9
	return         reduce using rule 9


State 160

	InsList -> InsList ';' Instruc .                    (rule 69)

	';'            reduce using rule 69
	end            reduce using rule 69


State 161

	CondSelect -> if Boolean then Instruc else . Instruc    (rule 71)

	id             shift, and enter state 14
	read           shift, and enter state 15
	write          shift, and enter state 16
	begin          shift, and enter state 18
	if             shift, and enter state 19
	while          shift, and enter state 20
	foreach        shift, and enter state 21
	return         shift, and enter state 22

	Instruc        goto state 172
	Asig           goto state 5
	Lval           goto state 6
	InsBlock       goto state 7
	CondSelect     goto state 8
	While          goto state 9
	ForEach        goto state 10
	Read           goto state 11
	Write          goto state 12
	Return         goto state 13

State 162

	ForEach -> foreach id in Exp do . Instruc           (rule 73)

	id             shift, and enter state 14
	read           shift, and enter state 15
	write          shift, and enter state 16
	begin          shift, and enter state 18
	if             shift, and enter state 19
	while          shift, and enter state 20
	foreach        shift, and enter state 21
	return         shift, and enter state 22

	Instruc        goto state 171
	Asig           goto state 5
	Lval           goto state 6
	InsBlock       goto state 7
	CondSelect     goto state 8
	While          goto state 9
	ForEach        goto state 10
	Read           goto state 11
	Write          goto state 12
	Return         goto state 13

State 163

	Eye -> eye '(' Exp ')' .                            (rule 61)

	id             reduce using rule 61
	'+'            reduce using rule 61
	'-'            reduce using rule 61
	'*'            reduce using rule 61
	'/'            reduce using rule 61
	'%'            reduce using rule 61
	'**'           reduce using rule 61
	'.'            reduce using rule 61
	'<'            reduce using rule 61
	'>'            reduce using rule 61
	'<='           reduce using rule 61
	'>='           reduce using rule 61
	'='            reduce using rule 61
	'!='           reduce using rule 61
	']'            reduce using rule 61
	'}'            reduce using rule 61
	')'            reduce using rule 61
	':'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61
	'&&'           reduce using rule 61
	'||'           reduce using rule 61
	read           reduce using rule 61
	write          reduce using rule 61
	define         reduce using rule 61
	begin          reduce using rule 61
	end            reduce using rule 61
	if             reduce using rule 61
	else           reduce using rule 61
	then           reduce using rule 61
	while          reduce using rule 61
	do             reduce using rule 61
	foreach        reduce using rule 61
	return         reduce using rule 61
	%eof           reduce using rule 61


State 164

	Range -> range '(' Exp ')' .                        (rule 60)

	id             reduce using rule 60
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	'%'            reduce using rule 60
	'**'           reduce using rule 60
	'.'            reduce using rule 60
	'<'            reduce using rule 60
	'>'            reduce using rule 60
	'<='           reduce using rule 60
	'>='           reduce using rule 60
	'='            reduce using rule 60
	'!='           reduce using rule 60
	']'            reduce using rule 60
	'}'            reduce using rule 60
	')'            reduce using rule 60
	':'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	'&&'           reduce using rule 60
	'||'           reduce using rule 60
	read           reduce using rule 60
	write          reduce using rule 60
	define         reduce using rule 60
	begin          reduce using rule 60
	end            reduce using rule 60
	if             reduce using rule 60
	else           reduce using rule 60
	then           reduce using rule 60
	while          reduce using rule 60
	do             reduce using rule 60
	foreach        reduce using rule 60
	return         reduce using rule 60
	%eof           reduce using rule 60


State 165

	Zeroes -> zeroes '(' Exp ')' .                      (rule 59)

	id             reduce using rule 59
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'%'            reduce using rule 59
	'**'           reduce using rule 59
	'.'            reduce using rule 59
	'<'            reduce using rule 59
	'>'            reduce using rule 59
	'<='           reduce using rule 59
	'>='           reduce using rule 59
	'='            reduce using rule 59
	'!='           reduce using rule 59
	']'            reduce using rule 59
	'}'            reduce using rule 59
	')'            reduce using rule 59
	':'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	'&&'           reduce using rule 59
	'||'           reduce using rule 59
	read           reduce using rule 59
	write          reduce using rule 59
	define         reduce using rule 59
	begin          reduce using rule 59
	end            reduce using rule 59
	if             reduce using rule 59
	else           reduce using rule 59
	then           reduce using rule 59
	while          reduce using rule 59
	do             reduce using rule 59
	foreach        reduce using rule 59
	return         reduce using rule 59
	%eof           reduce using rule 59


State 166

	Zeroes -> zeroes '(' Exp ',' . Exp ')'              (rule 58)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Exp            goto state 170
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 167

	MatList -> MatList ';' Mat .                        (rule 48)

	'}'            reduce using rule 48
	';'            reduce using rule 48


State 168

	ExpList -> ExpList . ',' Exp                        (rule 50)
	ElemList -> ElemList ';' ExpList .                  (rule 52)

	'}'            reduce using rule 52
	','            shift, and enter state 69
	';'            reduce using rule 52


State 169

	FunCall -> id '(' ExpList ')' .                     (rule 53)

	id             reduce using rule 53
	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'*'            reduce using rule 53
	'/'            reduce using rule 53
	'%'            reduce using rule 53
	'**'           reduce using rule 53
	'.'            reduce using rule 53
	'<'            reduce using rule 53
	'>'            reduce using rule 53
	'<='           reduce using rule 53
	'>='           reduce using rule 53
	'='            reduce using rule 53
	'!='           reduce using rule 53
	']'            reduce using rule 53
	'}'            reduce using rule 53
	')'            reduce using rule 53
	':'            reduce using rule 53
	','            reduce using rule 53
	';'            reduce using rule 53
	'&&'           reduce using rule 53
	'||'           reduce using rule 53
	read           reduce using rule 53
	write          reduce using rule 53
	define         reduce using rule 53
	begin          reduce using rule 53
	end            reduce using rule 53
	if             reduce using rule 53
	else           reduce using rule 53
	then           reduce using rule 53
	while          reduce using rule 53
	do             reduce using rule 53
	foreach        reduce using rule 53
	return         reduce using rule 53
	%eof           reduce using rule 53


State 170

	Exp -> Exp . '+' Exp                                (rule 30)
	Exp -> Exp . '-' Exp                                (rule 31)
	Exp -> Exp . '*' Exp                                (rule 32)
	Exp -> Exp . '/' Exp                                (rule 33)
	Exp -> Exp . '%' Exp                                (rule 34)
	Exp -> Exp . '**' Exp                               (rule 35)
	Exp -> Exp . '.' Exp                                (rule 36)
	Zeroes -> zeroes '(' Exp ',' Exp . ')'              (rule 58)

	'+'            shift, and enter state 62
	'-'            shift, and enter state 63
	'*'            shift, and enter state 64
	'/'            shift, and enter state 65
	'%'            shift, and enter state 66
	'**'           shift, and enter state 67
	'.'            shift, and enter state 68
	')'            shift, and enter state 185


State 171

	ForEach -> foreach id in Exp do Instruc .           (rule 73)

	id             reduce using rule 73
	';'            reduce using rule 73
	read           reduce using rule 73
	write          reduce using rule 73
	define         reduce using rule 73
	begin          reduce using rule 73
	end            reduce using rule 73
	if             reduce using rule 73
	else           reduce using rule 73
	while          reduce using rule 73
	foreach        reduce using rule 73
	return         reduce using rule 73
	%eof           reduce using rule 73


State 172

	CondSelect -> if Boolean then Instruc else Instruc .    (rule 71)

	id             reduce using rule 71
	';'            reduce using rule 71
	read           reduce using rule 71
	write          reduce using rule 71
	define         reduce using rule 71
	begin          reduce using rule 71
	end            reduce using rule 71
	if             reduce using rule 71
	else           reduce using rule 71
	while          reduce using rule 71
	foreach        reduce using rule 71
	return         reduce using rule 71
	%eof           reduce using rule 71


State 173

	VarListDec -> VarListDec ';' IdList ':' . VarType    (rule 65)

	tnum           shift, and enter state 157
	tvec           shift, and enter state 158
	tmat           shift, and enter state 159

	VarType        goto state 184

State 174

	VarListFunc -> VarListFunc . ',' VarListFunc        (rule 6)
	VarListFunc -> VarListFunc ',' VarListFunc .        (rule 6)

	')'            reduce using rule 6
	','            shift, and enter state 153


State 175

	FunDec -> FunDec define id '(' VarListFunc ')' of . type VarType as Instruc    (rule 3)

	type           shift, and enter state 183


State 176

	VarListFunc -> id ':' VarType .                     (rule 5)

	')'            reduce using rule 5
	','            reduce using rule 5


State 177

	FunDec -> FunDec define id '(' ')' of type . VarType as Instruc    (rule 4)

	tnum           shift, and enter state 157
	tvec           shift, and enter state 158
	tmat           shift, and enter state 159

	VarType        goto state 182

State 178

	Lval -> id '[' Exp ',' Exp ']' .                    (rule 21)

	id             reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	'%'            reduce using rule 21
	'**'           reduce using rule 21
	'.'            reduce using rule 21
	'<'            reduce using rule 21
	'>'            reduce using rule 21
	'<='           reduce using rule 21
	'>='           reduce using rule 21
	'='            reduce using rule 21
	'!='           reduce using rule 21
	':='           reduce using rule 21
	']'            reduce using rule 21
	'}'            reduce using rule 21
	')'            reduce using rule 21
	':'            reduce using rule 21
	','            reduce using rule 21
	';'            reduce using rule 21
	'&&'           reduce using rule 21
	'||'           reduce using rule 21
	read           reduce using rule 21
	write          reduce using rule 21
	define         reduce using rule 21
	begin          reduce using rule 21
	end            reduce using rule 21
	if             reduce using rule 21
	else           reduce using rule 21
	then           reduce using rule 21
	while          reduce using rule 21
	do             reduce using rule 21
	foreach        reduce using rule 21
	return         reduce using rule 21
	%eof           reduce using rule 21


State 179

	Lval -> id '[' Ind ':' Ind ']' .                    (rule 22)

	id             reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            reduce using rule 22
	'/'            reduce using rule 22
	'%'            reduce using rule 22
	'**'           reduce using rule 22
	'.'            reduce using rule 22
	'<'            reduce using rule 22
	'>'            reduce using rule 22
	'<='           reduce using rule 22
	'>='           reduce using rule 22
	'='            reduce using rule 22
	'!='           reduce using rule 22
	':='           reduce using rule 22
	']'            reduce using rule 22
	'}'            reduce using rule 22
	')'            reduce using rule 22
	':'            reduce using rule 22
	','            reduce using rule 22
	';'            reduce using rule 22
	'&&'           reduce using rule 22
	'||'           reduce using rule 22
	read           reduce using rule 22
	write          reduce using rule 22
	define         reduce using rule 22
	begin          reduce using rule 22
	end            reduce using rule 22
	if             reduce using rule 22
	else           reduce using rule 22
	then           reduce using rule 22
	while          reduce using rule 22
	do             reduce using rule 22
	foreach        reduce using rule 22
	return         reduce using rule 22
	%eof           reduce using rule 22


State 180

	Lval -> id '[' Ind ':' Ind ',' . Ind ':' Ind ']'    (rule 23)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	':'            reduce using rule 24
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Ind            goto state 181
	Exp            goto state 148
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 181

	Lval -> id '[' Ind ':' Ind ',' Ind . ':' Ind ']'    (rule 23)

	':'            shift, and enter state 188


State 182

	FunDec -> FunDec define id '(' ')' of type VarType . as Instruc    (rule 4)

	as             shift, and enter state 187


State 183

	FunDec -> FunDec define id '(' VarListFunc ')' of type . VarType as Instruc    (rule 3)

	tnum           shift, and enter state 157
	tvec           shift, and enter state 158
	tmat           shift, and enter state 159

	VarType        goto state 186

State 184

	VarListDec -> VarListDec ';' IdList ':' VarType .    (rule 65)

	id             reduce using rule 65
	';'            reduce using rule 65
	read           reduce using rule 65
	write          reduce using rule 65
	begin          reduce using rule 65
	if             reduce using rule 65
	while          reduce using rule 65
	foreach        reduce using rule 65
	return         reduce using rule 65


State 185

	Zeroes -> zeroes '(' Exp ',' Exp ')' .              (rule 58)

	id             reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'%'            reduce using rule 58
	'**'           reduce using rule 58
	'.'            reduce using rule 58
	'<'            reduce using rule 58
	'>'            reduce using rule 58
	'<='           reduce using rule 58
	'>='           reduce using rule 58
	'='            reduce using rule 58
	'!='           reduce using rule 58
	']'            reduce using rule 58
	'}'            reduce using rule 58
	')'            reduce using rule 58
	':'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58
	'&&'           reduce using rule 58
	'||'           reduce using rule 58
	read           reduce using rule 58
	write          reduce using rule 58
	define         reduce using rule 58
	begin          reduce using rule 58
	end            reduce using rule 58
	if             reduce using rule 58
	else           reduce using rule 58
	then           reduce using rule 58
	while          reduce using rule 58
	do             reduce using rule 58
	foreach        reduce using rule 58
	return         reduce using rule 58
	%eof           reduce using rule 58


State 186

	FunDec -> FunDec define id '(' VarListFunc ')' of type VarType . as Instruc    (rule 3)

	as             shift, and enter state 191


State 187

	FunDec -> FunDec define id '(' ')' of type VarType as . Instruc    (rule 4)

	id             shift, and enter state 14
	read           shift, and enter state 15
	write          shift, and enter state 16
	begin          shift, and enter state 18
	if             shift, and enter state 19
	while          shift, and enter state 20
	foreach        shift, and enter state 21
	return         shift, and enter state 22

	Instruc        goto state 190
	Asig           goto state 5
	Lval           goto state 6
	InsBlock       goto state 7
	CondSelect     goto state 8
	While          goto state 9
	ForEach        goto state 10
	Read           goto state 11
	Write          goto state 12
	Return         goto state 13

State 188

	Lval -> id '[' Ind ':' Ind ',' Ind ':' . Ind ']'    (rule 23)

	string         shift, and enter state 31
	id             shift, and enter state 32
	num            shift, and enter state 33
	'-'            shift, and enter state 34
	']'            reduce using rule 24
	'{'            shift, and enter state 35
	'('            shift, and enter state 36
	'$'            shift, and enter state 37
	'@'            shift, and enter state 38
	'^'            shift, and enter state 39
	zeroes         shift, and enter state 40
	range          shift, and enter state 41
	eye            shift, and enter state 42

	Lval           goto state 23
	Ind            goto state 189
	Exp            goto state 148
	Mat            goto state 25
	FunCall        goto state 26
	FunEmb         goto state 27
	Zeroes         goto state 28
	Range          goto state 29
	Eye            goto state 30

State 189

	Lval -> id '[' Ind ':' Ind ',' Ind ':' Ind . ']'    (rule 23)

	']'            shift, and enter state 193


State 190

	FunDec -> FunDec define id '(' ')' of type VarType as Instruc .    (rule 4)

	id             reduce using rule 4
	read           reduce using rule 4
	write          reduce using rule 4
	define         reduce using rule 4
	begin          reduce using rule 4
	if             reduce using rule 4
	while          reduce using rule 4
	foreach        reduce using rule 4
	return         reduce using rule 4


State 191

	FunDec -> FunDec define id '(' VarListFunc ')' of type VarType as . Instruc    (rule 3)

	id             shift, and enter state 14
	read           shift, and enter state 15
	write          shift, and enter state 16
	begin          shift, and enter state 18
	if             shift, and enter state 19
	while          shift, and enter state 20
	foreach        shift, and enter state 21
	return         shift, and enter state 22

	Instruc        goto state 192
	Asig           goto state 5
	Lval           goto state 6
	InsBlock       goto state 7
	CondSelect     goto state 8
	While          goto state 9
	ForEach        goto state 10
	Read           goto state 11
	Write          goto state 12
	Return         goto state 13

State 192

	FunDec -> FunDec define id '(' VarListFunc ')' of type VarType as Instruc .    (rule 3)

	id             reduce using rule 3
	read           reduce using rule 3
	write          reduce using rule 3
	define         reduce using rule 3
	begin          reduce using rule 3
	if             reduce using rule 3
	while          reduce using rule 3
	foreach        reduce using rule 3
	return         reduce using rule 3


State 193

	Lval -> id '[' Ind ':' Ind ',' Ind ':' Ind ']' .    (rule 23)

	id             reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23
	'%'            reduce using rule 23
	'**'           reduce using rule 23
	'.'            reduce using rule 23
	'<'            reduce using rule 23
	'>'            reduce using rule 23
	'<='           reduce using rule 23
	'>='           reduce using rule 23
	'='            reduce using rule 23
	'!='           reduce using rule 23
	':='           reduce using rule 23
	']'            reduce using rule 23
	'}'            reduce using rule 23
	')'            reduce using rule 23
	':'            reduce using rule 23
	','            reduce using rule 23
	';'            reduce using rule 23
	'&&'           reduce using rule 23
	'||'           reduce using rule 23
	read           reduce using rule 23
	write          reduce using rule 23
	define         reduce using rule 23
	begin          reduce using rule 23
	end            reduce using rule 23
	if             reduce using rule 23
	else           reduce using rule 23
	then           reduce using rule 23
	while          reduce using rule 23
	do             reduce using rule 23
	foreach        reduce using rule 23
	return         reduce using rule 23
	%eof           reduce using rule 23


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 90
Number of terminals: 57
Number of non-terminals: 31
Number of states: 194
